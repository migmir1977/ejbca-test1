name: Performance  test

on:
  workflow_dispatch:
    inputs:
      environment_name:
        type: environment
        description: 'Choose environment'      
      num_of_threads:
        description: 'Number of threads (end-user clients)'
        required: false
        default: '3'
      num_of_certs:
        description: 'Number of certificates per thread'
        required: false
        default: '5'
      ca_name:
        description: 'CA to issue the certificates'
        required: true
        default: ''
      cert_profile:
        description: 'CA profile name'
        required: true
        default: ''
      enduser_profile:
        description: 'Enduser profile name'
        required: true
        default: ''
      subject_dn:
        description: 'Subject DN'
        required: true
        default: ''

permissions:
  contents: write  # Required to push changes to gh-pages
  pages: write     # Required to update GitHub Pages      

jobs:
  setup-runner:
    name: Setup runner for deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    outputs:
      deployrunner: ${{ steps.step1.outputs.deployrunner }}
    steps:
      - name: Set runs-on for deploy
        id: step1
        run: |
          echo "deployrunner=${{ inputs.environment_name }}" >> $GITHUB_OUTPUT

  run-jmeter:    
    needs: [setup-runner]
    environment: ${{ inputs.environment_name }}
    runs-on: ${{needs.setup-runner.outputs.deployrunner}}
    name: Run jmeter on -${{needs.setup-runner.outputs.deployrunner}}-
    env:
      runnerLabels: ${{needs.setup-runner.outputs.deployrunner}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Unique Identifier
        id: generate-id
        run: echo "RUN_ID=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Show variables
        run: |
          echo "Running on ${{ env.runnerLabels }} with variables ${{ vars.EJBCA_HOSTNAME }} and ${{ vars.EJBCA_PORT }}"
  
      - name: Run JMeter Test Plan
        run: |
          /opt/jmeter-5.6.3/apache-jmeter-5.6.3/bin/jmeter -n -t tests/ejbca-performance-test.jmx \
          -l test-results-${RUN_ID}.jtl \
          -Jthread_count=${{ inputs.num_of_threads }} \
          -Jramp_up_period=1 \
          -Jloop_count=${{ inputs.num_of_certs }} \
          -Jhost_name=${{ vars.EJBCA_HOSTNAME }} \
          -Jhost_port=${{ vars.EJBCA_PORT }} \
          -Jcert_profile_name=${{ inputs.cert_profile }} \
          -Jend_user_name=${{ inputs.enduser_profile }} \
          -Jca_name=${{ inputs.ca_name }} \
          -Jsubject_dn=${{ inputs.subject_dn }} \
          -e -o report-${RUN_ID}          
          #failures=$(grep -c 'failure="true"' test-results-${RUN_ID}.jtl)          
          #if [ $failures -gt 0 ]; then
          #  echo "JMeter test failed with $failures failures."
          #  echo "JMETER_RETURNVALUE=1" >> $GITHUB_ENV
          #fi          
        env:
          RUN_ID: ${{ env.RUN_ID }}

      - name: Save JMeter Report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-report-${{ env.RUN_ID }}
          path: report-${{ env.RUN_ID }}
  
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: report-${{ env.RUN_ID }}
      
      - name: Run final exit check
        run: |
          if [ "$JMETER_RETURNVALUE" -ne 0 ]; then
            echo "Job failed due to JMeter test failures."
            exit 1          
          fi        

#      - name: Checkout gh-pages branch
#        uses: actions/checkout@v3
#        with:
#          path: repo
#          ref: gh-pages  # gh-pages branch
#
#      - name: Copy JMeter Report to gh-pages directory
#        run: |
#          mkdir -p repo/reports/${RUN_ID}
#          cp -r report-${RUN_ID}/* repo/reports/${RUN_ID}/
#            
#      - name: Generate Index File
#        run: |
#          cd repo
#          echo "<!DOCTYPE html>" > index.html
#          echo "<html><head><title>Reports</title></head><body><h1>Reports List</h1><ul>" >> index.html
#          for folder in $(ls -d reports/*/); do
#            folder_name=$(basename $folder)
#            echo "<li><a href='reports/$folder_name/index.html'>$folder_name</a></li>" >> index.html
#          done
#          echo "</ul></body></html>" >> index.html              
#
#      - name: Commit and Push Reports to gh-pages
#        run: |
#          cd repo
#          git config --local user.email "github-actions[bot]@users.noreply.github.com"
#          git config --local user.name "github-actions[bot]"
#          git add reports/${RUN_ID}
#          git add index.html
#          git commit -m "Add JMeter report for ${RUN_ID}"
#          git push origin gh-pages
