/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 15054.0, "series": [{"data": [[0.0, 14.0], [0.1, 15.0], [0.2, 15.0], [0.3, 16.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 16.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 17.0], [1.4, 17.0], [1.5, 17.0], [1.6, 17.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 17.0], [2.1, 17.0], [2.2, 17.0], [2.3, 17.0], [2.4, 17.0], [2.5, 17.0], [2.6, 17.0], [2.7, 17.0], [2.8, 17.0], [2.9, 17.0], [3.0, 17.0], [3.1, 17.0], [3.2, 17.0], [3.3, 17.0], [3.4, 17.0], [3.5, 17.0], [3.6, 18.0], [3.7, 18.0], [3.8, 18.0], [3.9, 18.0], [4.0, 18.0], [4.1, 18.0], [4.2, 18.0], [4.3, 18.0], [4.4, 18.0], [4.5, 18.0], [4.6, 18.0], [4.7, 18.0], [4.8, 18.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 18.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 18.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 19.0], [8.1, 19.0], [8.2, 19.0], [8.3, 19.0], [8.4, 19.0], [8.5, 19.0], [8.6, 19.0], [8.7, 19.0], [8.8, 19.0], [8.9, 19.0], [9.0, 19.0], [9.1, 19.0], [9.2, 19.0], [9.3, 19.0], [9.4, 19.0], [9.5, 19.0], [9.6, 19.0], [9.7, 19.0], [9.8, 19.0], [9.9, 19.0], [10.0, 19.0], [10.1, 19.0], [10.2, 19.0], [10.3, 19.0], [10.4, 19.0], [10.5, 19.0], [10.6, 19.0], [10.7, 19.0], [10.8, 19.0], [10.9, 19.0], [11.0, 19.0], [11.1, 19.0], [11.2, 19.0], [11.3, 19.0], [11.4, 19.0], [11.5, 19.0], [11.6, 19.0], [11.7, 19.0], [11.8, 19.0], [11.9, 19.0], [12.0, 19.0], [12.1, 19.0], [12.2, 19.0], [12.3, 19.0], [12.4, 19.0], [12.5, 19.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 20.0], [14.8, 20.0], [14.9, 20.0], [15.0, 20.0], [15.1, 20.0], [15.2, 20.0], [15.3, 20.0], [15.4, 20.0], [15.5, 20.0], [15.6, 20.0], [15.7, 20.0], [15.8, 20.0], [15.9, 20.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 20.0], [18.7, 20.0], [18.8, 20.0], [18.9, 20.0], [19.0, 20.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 22.0], [26.5, 22.0], [26.6, 22.0], [26.7, 22.0], [26.8, 22.0], [26.9, 22.0], [27.0, 22.0], [27.1, 22.0], [27.2, 22.0], [27.3, 22.0], [27.4, 22.0], [27.5, 22.0], [27.6, 22.0], [27.7, 22.0], [27.8, 22.0], [27.9, 22.0], [28.0, 22.0], [28.1, 22.0], [28.2, 22.0], [28.3, 22.0], [28.4, 22.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 22.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 23.0], [34.7, 23.0], [34.8, 23.0], [34.9, 23.0], [35.0, 23.0], [35.1, 23.0], [35.2, 23.0], [35.3, 23.0], [35.4, 23.0], [35.5, 23.0], [35.6, 23.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 23.0], [39.1, 23.0], [39.2, 23.0], [39.3, 23.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 23.0], [39.9, 23.0], [40.0, 23.0], [40.1, 23.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 24.0], [42.6, 24.0], [42.7, 24.0], [42.8, 24.0], [42.9, 24.0], [43.0, 24.0], [43.1, 24.0], [43.2, 24.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 24.0], [46.1, 24.0], [46.2, 24.0], [46.3, 24.0], [46.4, 24.0], [46.5, 24.0], [46.6, 24.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 24.0], [49.5, 24.0], [49.6, 24.0], [49.7, 24.0], [49.8, 24.0], [49.9, 24.0], [50.0, 24.0], [50.1, 24.0], [50.2, 25.0], [50.3, 25.0], [50.4, 25.0], [50.5, 25.0], [50.6, 25.0], [50.7, 25.0], [50.8, 25.0], [50.9, 25.0], [51.0, 25.0], [51.1, 25.0], [51.2, 25.0], [51.3, 25.0], [51.4, 25.0], [51.5, 25.0], [51.6, 25.0], [51.7, 25.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 25.0], [52.3, 25.0], [52.4, 25.0], [52.5, 25.0], [52.6, 25.0], [52.7, 25.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 25.0], [53.3, 25.0], [53.4, 25.0], [53.5, 25.0], [53.6, 25.0], [53.7, 25.0], [53.8, 25.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 25.0], [54.5, 25.0], [54.6, 25.0], [54.7, 25.0], [54.8, 25.0], [54.9, 25.0], [55.0, 25.0], [55.1, 25.0], [55.2, 25.0], [55.3, 25.0], [55.4, 25.0], [55.5, 25.0], [55.6, 25.0], [55.7, 25.0], [55.8, 25.0], [55.9, 25.0], [56.0, 25.0], [56.1, 25.0], [56.2, 25.0], [56.3, 25.0], [56.4, 25.0], [56.5, 25.0], [56.6, 25.0], [56.7, 25.0], [56.8, 25.0], [56.9, 25.0], [57.0, 25.0], [57.1, 25.0], [57.2, 25.0], [57.3, 25.0], [57.4, 25.0], [57.5, 25.0], [57.6, 26.0], [57.7, 26.0], [57.8, 26.0], [57.9, 26.0], [58.0, 26.0], [58.1, 26.0], [58.2, 26.0], [58.3, 26.0], [58.4, 26.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 26.0], [58.9, 26.0], [59.0, 26.0], [59.1, 26.0], [59.2, 26.0], [59.3, 26.0], [59.4, 26.0], [59.5, 26.0], [59.6, 26.0], [59.7, 26.0], [59.8, 26.0], [59.9, 26.0], [60.0, 26.0], [60.1, 26.0], [60.2, 26.0], [60.3, 26.0], [60.4, 26.0], [60.5, 26.0], [60.6, 26.0], [60.7, 26.0], [60.8, 26.0], [60.9, 26.0], [61.0, 26.0], [61.1, 26.0], [61.2, 26.0], [61.3, 26.0], [61.4, 26.0], [61.5, 26.0], [61.6, 26.0], [61.7, 26.0], [61.8, 26.0], [61.9, 26.0], [62.0, 26.0], [62.1, 26.0], [62.2, 26.0], [62.3, 26.0], [62.4, 26.0], [62.5, 26.0], [62.6, 26.0], [62.7, 26.0], [62.8, 26.0], [62.9, 26.0], [63.0, 26.0], [63.1, 26.0], [63.2, 26.0], [63.3, 26.0], [63.4, 26.0], [63.5, 26.0], [63.6, 26.0], [63.7, 26.0], [63.8, 26.0], [63.9, 26.0], [64.0, 26.0], [64.1, 26.0], [64.2, 26.0], [64.3, 26.0], [64.4, 27.0], [64.5, 27.0], [64.6, 27.0], [64.7, 27.0], [64.8, 27.0], [64.9, 27.0], [65.0, 27.0], [65.1, 27.0], [65.2, 27.0], [65.3, 27.0], [65.4, 27.0], [65.5, 27.0], [65.6, 27.0], [65.7, 27.0], [65.8, 27.0], [65.9, 27.0], [66.0, 27.0], [66.1, 27.0], [66.2, 27.0], [66.3, 27.0], [66.4, 27.0], [66.5, 27.0], [66.6, 27.0], [66.7, 27.0], [66.8, 27.0], [66.9, 27.0], [67.0, 27.0], [67.1, 27.0], [67.2, 27.0], [67.3, 27.0], [67.4, 27.0], [67.5, 27.0], [67.6, 27.0], [67.7, 27.0], [67.8, 27.0], [67.9, 27.0], [68.0, 27.0], [68.1, 27.0], [68.2, 27.0], [68.3, 27.0], [68.4, 27.0], [68.5, 27.0], [68.6, 27.0], [68.7, 27.0], [68.8, 27.0], [68.9, 27.0], [69.0, 27.0], [69.1, 27.0], [69.2, 27.0], [69.3, 27.0], [69.4, 27.0], [69.5, 27.0], [69.6, 27.0], [69.7, 27.0], [69.8, 27.0], [69.9, 27.0], [70.0, 27.0], [70.1, 27.0], [70.2, 27.0], [70.3, 27.0], [70.4, 27.0], [70.5, 27.0], [70.6, 28.0], [70.7, 28.0], [70.8, 28.0], [70.9, 28.0], [71.0, 28.0], [71.1, 28.0], [71.2, 28.0], [71.3, 28.0], [71.4, 28.0], [71.5, 28.0], [71.6, 28.0], [71.7, 28.0], [71.8, 28.0], [71.9, 28.0], [72.0, 28.0], [72.1, 28.0], [72.2, 28.0], [72.3, 28.0], [72.4, 28.0], [72.5, 28.0], [72.6, 28.0], [72.7, 28.0], [72.8, 28.0], [72.9, 28.0], [73.0, 28.0], [73.1, 28.0], [73.2, 28.0], [73.3, 28.0], [73.4, 28.0], [73.5, 28.0], [73.6, 28.0], [73.7, 28.0], [73.8, 28.0], [73.9, 28.0], [74.0, 28.0], [74.1, 28.0], [74.2, 28.0], [74.3, 28.0], [74.4, 28.0], [74.5, 28.0], [74.6, 28.0], [74.7, 28.0], [74.8, 28.0], [74.9, 28.0], [75.0, 28.0], [75.1, 28.0], [75.2, 28.0], [75.3, 28.0], [75.4, 28.0], [75.5, 28.0], [75.6, 28.0], [75.7, 28.0], [75.8, 29.0], [75.9, 29.0], [76.0, 29.0], [76.1, 29.0], [76.2, 29.0], [76.3, 29.0], [76.4, 29.0], [76.5, 29.0], [76.6, 29.0], [76.7, 29.0], [76.8, 29.0], [76.9, 29.0], [77.0, 29.0], [77.1, 29.0], [77.2, 29.0], [77.3, 29.0], [77.4, 29.0], [77.5, 29.0], [77.6, 29.0], [77.7, 29.0], [77.8, 29.0], [77.9, 29.0], [78.0, 29.0], [78.1, 29.0], [78.2, 29.0], [78.3, 29.0], [78.4, 29.0], [78.5, 29.0], [78.6, 29.0], [78.7, 29.0], [78.8, 29.0], [78.9, 29.0], [79.0, 29.0], [79.1, 29.0], [79.2, 29.0], [79.3, 29.0], [79.4, 29.0], [79.5, 29.0], [79.6, 29.0], [79.7, 29.0], [79.8, 29.0], [79.9, 29.0], [80.0, 29.0], [80.1, 29.0], [80.2, 29.0], [80.3, 29.0], [80.4, 29.0], [80.5, 30.0], [80.6, 30.0], [80.7, 30.0], [80.8, 30.0], [80.9, 30.0], [81.0, 30.0], [81.1, 30.0], [81.2, 30.0], [81.3, 30.0], [81.4, 30.0], [81.5, 30.0], [81.6, 30.0], [81.7, 30.0], [81.8, 30.0], [81.9, 30.0], [82.0, 30.0], [82.1, 30.0], [82.2, 30.0], [82.3, 30.0], [82.4, 30.0], [82.5, 30.0], [82.6, 30.0], [82.7, 30.0], [82.8, 30.0], [82.9, 30.0], [83.0, 30.0], [83.1, 30.0], [83.2, 30.0], [83.3, 30.0], [83.4, 30.0], [83.5, 30.0], [83.6, 30.0], [83.7, 30.0], [83.8, 30.0], [83.9, 30.0], [84.0, 30.0], [84.1, 31.0], [84.2, 31.0], [84.3, 31.0], [84.4, 31.0], [84.5, 31.0], [84.6, 31.0], [84.7, 31.0], [84.8, 31.0], [84.9, 31.0], [85.0, 31.0], [85.1, 31.0], [85.2, 31.0], [85.3, 31.0], [85.4, 31.0], [85.5, 31.0], [85.6, 31.0], [85.7, 31.0], [85.8, 31.0], [85.9, 31.0], [86.0, 31.0], [86.1, 31.0], [86.2, 31.0], [86.3, 31.0], [86.4, 31.0], [86.5, 31.0], [86.6, 31.0], [86.7, 31.0], [86.8, 31.0], [86.9, 31.0], [87.0, 31.0], [87.1, 31.0], [87.2, 32.0], [87.3, 32.0], [87.4, 32.0], [87.5, 32.0], [87.6, 32.0], [87.7, 32.0], [87.8, 32.0], [87.9, 32.0], [88.0, 32.0], [88.1, 32.0], [88.2, 32.0], [88.3, 32.0], [88.4, 32.0], [88.5, 32.0], [88.6, 32.0], [88.7, 32.0], [88.8, 32.0], [88.9, 32.0], [89.0, 32.0], [89.1, 32.0], [89.2, 32.0], [89.3, 32.0], [89.4, 32.0], [89.5, 32.0], [89.6, 33.0], [89.7, 33.0], [89.8, 33.0], [89.9, 33.0], [90.0, 33.0], [90.1, 33.0], [90.2, 33.0], [90.3, 33.0], [90.4, 33.0], [90.5, 33.0], [90.6, 33.0], [90.7, 33.0], [90.8, 33.0], [90.9, 33.0], [91.0, 33.0], [91.1, 33.0], [91.2, 33.0], [91.3, 33.0], [91.4, 34.0], [91.5, 34.0], [91.6, 34.0], [91.7, 34.0], [91.8, 34.0], [91.9, 34.0], [92.0, 34.0], [92.1, 34.0], [92.2, 34.0], [92.3, 34.0], [92.4, 34.0], [92.5, 34.0], [92.6, 34.0], [92.7, 34.0], [92.8, 34.0], [92.9, 35.0], [93.0, 35.0], [93.1, 35.0], [93.2, 35.0], [93.3, 35.0], [93.4, 35.0], [93.5, 35.0], [93.6, 35.0], [93.7, 35.0], [93.8, 35.0], [93.9, 35.0], [94.0, 35.0], [94.1, 36.0], [94.2, 36.0], [94.3, 36.0], [94.4, 36.0], [94.5, 36.0], [94.6, 36.0], [94.7, 36.0], [94.8, 36.0], [94.9, 37.0], [95.0, 37.0], [95.1, 37.0], [95.2, 37.0], [95.3, 37.0], [95.4, 37.0], [95.5, 37.0], [95.6, 37.0], [95.7, 37.0], [95.8, 38.0], [95.9, 38.0], [96.0, 38.0], [96.1, 38.0], [96.2, 38.0], [96.3, 39.0], [96.4, 39.0], [96.5, 39.0], [96.6, 39.0], [96.7, 39.0], [96.8, 39.0], [96.9, 40.0], [97.0, 40.0], [97.1, 40.0], [97.2, 41.0], [97.3, 41.0], [97.4, 41.0], [97.5, 41.0], [97.6, 42.0], [97.7, 42.0], [97.8, 42.0], [97.9, 43.0], [98.0, 43.0], [98.1, 44.0], [98.2, 44.0], [98.3, 45.0], [98.4, 46.0], [98.5, 46.0], [98.6, 47.0], [98.7, 47.0], [98.8, 48.0], [98.9, 49.0], [99.0, 51.0], [99.1, 52.0], [99.2, 55.0], [99.3, 60.0], [99.4, 67.0], [99.5, 90.0], [99.6, 112.0], [99.7, 132.0], [99.8, 145.0], [99.9, 163.0]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[0.0, 149.0], [0.1, 171.0], [0.2, 174.0], [0.3, 177.0], [0.4, 179.0], [0.5, 180.0], [0.6, 181.0], [0.7, 182.0], [0.8, 183.0], [0.9, 184.0], [1.0, 184.0], [1.1, 185.0], [1.2, 186.0], [1.3, 186.0], [1.4, 187.0], [1.5, 187.0], [1.6, 188.0], [1.7, 188.0], [1.8, 189.0], [1.9, 189.0], [2.0, 189.0], [2.1, 190.0], [2.2, 190.0], [2.3, 191.0], [2.4, 191.0], [2.5, 191.0], [2.6, 192.0], [2.7, 192.0], [2.8, 193.0], [2.9, 193.0], [3.0, 193.0], [3.1, 193.0], [3.2, 194.0], [3.3, 194.0], [3.4, 194.0], [3.5, 195.0], [3.6, 195.0], [3.7, 195.0], [3.8, 196.0], [3.9, 196.0], [4.0, 196.0], [4.1, 197.0], [4.2, 197.0], [4.3, 197.0], [4.4, 197.0], [4.5, 198.0], [4.6, 198.0], [4.7, 198.0], [4.8, 198.0], [4.9, 198.0], [5.0, 199.0], [5.1, 199.0], [5.2, 199.0], [5.3, 199.0], [5.4, 200.0], [5.5, 200.0], [5.6, 200.0], [5.7, 200.0], [5.8, 201.0], [5.9, 201.0], [6.0, 201.0], [6.1, 201.0], [6.2, 201.0], [6.3, 202.0], [6.4, 202.0], [6.5, 202.0], [6.6, 202.0], [6.7, 203.0], [6.8, 203.0], [6.9, 203.0], [7.0, 203.0], [7.1, 203.0], [7.2, 204.0], [7.3, 204.0], [7.4, 204.0], [7.5, 204.0], [7.6, 204.0], [7.7, 205.0], [7.8, 205.0], [7.9, 205.0], [8.0, 205.0], [8.1, 205.0], [8.2, 206.0], [8.3, 206.0], [8.4, 206.0], [8.5, 206.0], [8.6, 206.0], [8.7, 206.0], [8.8, 207.0], [8.9, 207.0], [9.0, 207.0], [9.1, 207.0], [9.2, 207.0], [9.3, 207.0], [9.4, 208.0], [9.5, 208.0], [9.6, 208.0], [9.7, 208.0], [9.8, 208.0], [9.9, 208.0], [10.0, 209.0], [10.1, 209.0], [10.2, 209.0], [10.3, 209.0], [10.4, 209.0], [10.5, 210.0], [10.6, 210.0], [10.7, 210.0], [10.8, 210.0], [10.9, 210.0], [11.0, 210.0], [11.1, 210.0], [11.2, 211.0], [11.3, 211.0], [11.4, 211.0], [11.5, 211.0], [11.6, 211.0], [11.7, 211.0], [11.8, 212.0], [11.9, 212.0], [12.0, 212.0], [12.1, 212.0], [12.2, 212.0], [12.3, 212.0], [12.4, 212.0], [12.5, 213.0], [12.6, 213.0], [12.7, 213.0], [12.8, 213.0], [12.9, 213.0], [13.0, 213.0], [13.1, 214.0], [13.2, 214.0], [13.3, 214.0], [13.4, 214.0], [13.5, 214.0], [13.6, 214.0], [13.7, 215.0], [13.8, 215.0], [13.9, 215.0], [14.0, 215.0], [14.1, 215.0], [14.2, 215.0], [14.3, 215.0], [14.4, 216.0], [14.5, 216.0], [14.6, 216.0], [14.7, 216.0], [14.8, 216.0], [14.9, 216.0], [15.0, 217.0], [15.1, 217.0], [15.2, 217.0], [15.3, 217.0], [15.4, 217.0], [15.5, 217.0], [15.6, 218.0], [15.7, 218.0], [15.8, 218.0], [15.9, 218.0], [16.0, 218.0], [16.1, 218.0], [16.2, 218.0], [16.3, 218.0], [16.4, 219.0], [16.5, 219.0], [16.6, 219.0], [16.7, 219.0], [16.8, 219.0], [16.9, 219.0], [17.0, 219.0], [17.1, 220.0], [17.2, 220.0], [17.3, 220.0], [17.4, 220.0], [17.5, 220.0], [17.6, 220.0], [17.7, 220.0], [17.8, 221.0], [17.9, 221.0], [18.0, 221.0], [18.1, 221.0], [18.2, 221.0], [18.3, 221.0], [18.4, 222.0], [18.5, 222.0], [18.6, 222.0], [18.7, 222.0], [18.8, 222.0], [18.9, 222.0], [19.0, 222.0], [19.1, 223.0], [19.2, 223.0], [19.3, 223.0], [19.4, 223.0], [19.5, 223.0], [19.6, 224.0], [19.7, 224.0], [19.8, 224.0], [19.9, 224.0], [20.0, 224.0], [20.1, 224.0], [20.2, 224.0], [20.3, 224.0], [20.4, 225.0], [20.5, 225.0], [20.6, 225.0], [20.7, 225.0], [20.8, 225.0], [20.9, 225.0], [21.0, 225.0], [21.1, 226.0], [21.2, 226.0], [21.3, 226.0], [21.4, 226.0], [21.5, 226.0], [21.6, 226.0], [21.7, 226.0], [21.8, 227.0], [21.9, 227.0], [22.0, 227.0], [22.1, 227.0], [22.2, 227.0], [22.3, 227.0], [22.4, 228.0], [22.5, 228.0], [22.6, 228.0], [22.7, 228.0], [22.8, 228.0], [22.9, 228.0], [23.0, 228.0], [23.1, 229.0], [23.2, 229.0], [23.3, 229.0], [23.4, 229.0], [23.5, 229.0], [23.6, 229.0], [23.7, 230.0], [23.8, 230.0], [23.9, 230.0], [24.0, 230.0], [24.1, 230.0], [24.2, 230.0], [24.3, 231.0], [24.4, 231.0], [24.5, 231.0], [24.6, 231.0], [24.7, 231.0], [24.8, 232.0], [24.9, 232.0], [25.0, 232.0], [25.1, 232.0], [25.2, 232.0], [25.3, 232.0], [25.4, 232.0], [25.5, 232.0], [25.6, 233.0], [25.7, 233.0], [25.8, 233.0], [25.9, 233.0], [26.0, 233.0], [26.1, 233.0], [26.2, 233.0], [26.3, 234.0], [26.4, 234.0], [26.5, 234.0], [26.6, 234.0], [26.7, 234.0], [26.8, 234.0], [26.9, 235.0], [27.0, 235.0], [27.1, 235.0], [27.2, 235.0], [27.3, 235.0], [27.4, 235.0], [27.5, 236.0], [27.6, 236.0], [27.7, 236.0], [27.8, 236.0], [27.9, 236.0], [28.0, 236.0], [28.1, 237.0], [28.2, 237.0], [28.3, 237.0], [28.4, 237.0], [28.5, 237.0], [28.6, 237.0], [28.7, 238.0], [28.8, 238.0], [28.9, 238.0], [29.0, 238.0], [29.1, 238.0], [29.2, 238.0], [29.3, 239.0], [29.4, 239.0], [29.5, 239.0], [29.6, 239.0], [29.7, 239.0], [29.8, 240.0], [29.9, 240.0], [30.0, 240.0], [30.1, 240.0], [30.2, 240.0], [30.3, 241.0], [30.4, 241.0], [30.5, 241.0], [30.6, 241.0], [30.7, 241.0], [30.8, 242.0], [30.9, 242.0], [31.0, 242.0], [31.1, 242.0], [31.2, 242.0], [31.3, 243.0], [31.4, 243.0], [31.5, 243.0], [31.6, 243.0], [31.7, 244.0], [31.8, 244.0], [31.9, 244.0], [32.0, 244.0], [32.1, 244.0], [32.2, 245.0], [32.3, 245.0], [32.4, 245.0], [32.5, 245.0], [32.6, 245.0], [32.7, 246.0], [32.8, 246.0], [32.9, 246.0], [33.0, 246.0], [33.1, 247.0], [33.2, 247.0], [33.3, 247.0], [33.4, 247.0], [33.5, 248.0], [33.6, 248.0], [33.7, 248.0], [33.8, 248.0], [33.9, 248.0], [34.0, 249.0], [34.1, 249.0], [34.2, 249.0], [34.3, 249.0], [34.4, 250.0], [34.5, 250.0], [34.6, 250.0], [34.7, 250.0], [34.8, 251.0], [34.9, 251.0], [35.0, 251.0], [35.1, 252.0], [35.2, 252.0], [35.3, 252.0], [35.4, 252.0], [35.5, 253.0], [35.6, 253.0], [35.7, 253.0], [35.8, 254.0], [35.9, 254.0], [36.0, 254.0], [36.1, 254.0], [36.2, 255.0], [36.3, 255.0], [36.4, 255.0], [36.5, 256.0], [36.6, 256.0], [36.7, 257.0], [36.8, 257.0], [36.9, 257.0], [37.0, 257.0], [37.1, 258.0], [37.2, 258.0], [37.3, 259.0], [37.4, 259.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 261.0], [37.9, 261.0], [38.0, 261.0], [38.1, 262.0], [38.2, 262.0], [38.3, 263.0], [38.4, 263.0], [38.5, 264.0], [38.6, 264.0], [38.7, 264.0], [38.8, 265.0], [38.9, 265.0], [39.0, 266.0], [39.1, 267.0], [39.2, 267.0], [39.3, 268.0], [39.4, 269.0], [39.5, 269.0], [39.6, 270.0], [39.7, 270.0], [39.8, 271.0], [39.9, 272.0], [40.0, 272.0], [40.1, 273.0], [40.2, 273.0], [40.3, 274.0], [40.4, 275.0], [40.5, 276.0], [40.6, 277.0], [40.7, 277.0], [40.8, 278.0], [40.9, 279.0], [41.0, 280.0], [41.1, 281.0], [41.2, 282.0], [41.3, 283.0], [41.4, 284.0], [41.5, 285.0], [41.6, 286.0], [41.7, 287.0], [41.8, 288.0], [41.9, 289.0], [42.0, 291.0], [42.1, 292.0], [42.2, 294.0], [42.3, 295.0], [42.4, 297.0], [42.5, 299.0], [42.6, 300.0], [42.7, 302.0], [42.8, 304.0], [42.9, 306.0], [43.0, 309.0], [43.1, 312.0], [43.2, 315.0], [43.3, 318.0], [43.4, 321.0], [43.5, 324.0], [43.6, 327.0], [43.7, 329.0], [43.8, 332.0], [43.9, 336.0], [44.0, 339.0], [44.1, 341.0], [44.2, 345.0], [44.3, 348.0], [44.4, 351.0], [44.5, 354.0], [44.6, 357.0], [44.7, 360.0], [44.8, 363.0], [44.9, 366.0], [45.0, 369.0], [45.1, 373.0], [45.2, 377.0], [45.3, 380.0], [45.4, 384.0], [45.5, 386.0], [45.6, 388.0], [45.7, 391.0], [45.8, 394.0], [45.9, 397.0], [46.0, 399.0], [46.1, 401.0], [46.2, 404.0], [46.3, 407.0], [46.4, 410.0], [46.5, 413.0], [46.6, 416.0], [46.7, 420.0], [46.8, 423.0], [46.9, 426.0], [47.0, 429.0], [47.1, 432.0], [47.2, 434.0], [47.3, 437.0], [47.4, 441.0], [47.5, 444.0], [47.6, 446.0], [47.7, 450.0], [47.8, 453.0], [47.9, 457.0], [48.0, 460.0], [48.1, 463.0], [48.2, 466.0], [48.3, 468.0], [48.4, 472.0], [48.5, 475.0], [48.6, 479.0], [48.7, 481.0], [48.8, 484.0], [48.9, 487.0], [49.0, 491.0], [49.1, 495.0], [49.2, 498.0], [49.3, 502.0], [49.4, 506.0], [49.5, 510.0], [49.6, 514.0], [49.7, 518.0], [49.8, 521.0], [49.9, 525.0], [50.0, 529.0], [50.1, 533.0], [50.2, 537.0], [50.3, 542.0], [50.4, 545.0], [50.5, 548.0], [50.6, 553.0], [50.7, 555.0], [50.8, 558.0], [50.9, 563.0], [51.0, 567.0], [51.1, 570.0], [51.2, 575.0], [51.3, 580.0], [51.4, 585.0], [51.5, 590.0], [51.6, 594.0], [51.7, 599.0], [51.8, 601.0], [51.9, 605.0], [52.0, 609.0], [52.1, 612.0], [52.2, 616.0], [52.3, 621.0], [52.4, 625.0], [52.5, 629.0], [52.6, 633.0], [52.7, 639.0], [52.8, 644.0], [52.9, 648.0], [53.0, 653.0], [53.1, 656.0], [53.2, 662.0], [53.3, 665.0], [53.4, 669.0], [53.5, 673.0], [53.6, 677.0], [53.7, 681.0], [53.8, 686.0], [53.9, 690.0], [54.0, 695.0], [54.1, 699.0], [54.2, 704.0], [54.3, 708.0], [54.4, 712.0], [54.5, 717.0], [54.6, 721.0], [54.7, 726.0], [54.8, 730.0], [54.9, 734.0], [55.0, 739.0], [55.1, 745.0], [55.2, 749.0], [55.3, 755.0], [55.4, 761.0], [55.5, 767.0], [55.6, 772.0], [55.7, 779.0], [55.8, 787.0], [55.9, 795.0], [56.0, 803.0], [56.1, 811.0], [56.2, 819.0], [56.3, 827.0], [56.4, 837.0], [56.5, 847.0], [56.6, 856.0], [56.7, 866.0], [56.8, 875.0], [56.9, 884.0], [57.0, 893.0], [57.1, 905.0], [57.2, 918.0], [57.3, 929.0], [57.4, 948.0], [57.5, 971.0], [57.6, 993.0], [57.7, 1034.0], [57.8, 1083.0], [57.9, 1114.0], [58.0, 1131.0], [58.1, 1147.0], [58.2, 1163.0], [58.3, 1170.0], [58.4, 1176.0], [58.5, 1185.0], [58.6, 1191.0], [58.7, 1198.0], [58.8, 1204.0], [58.9, 1209.0], [59.0, 1216.0], [59.1, 1223.0], [59.2, 1229.0], [59.3, 1235.0], [59.4, 1240.0], [59.5, 1246.0], [59.6, 1250.0], [59.7, 1254.0], [59.8, 1257.0], [59.9, 1263.0], [60.0, 1266.0], [60.1, 1270.0], [60.2, 1273.0], [60.3, 1278.0], [60.4, 1281.0], [60.5, 1286.0], [60.6, 1289.0], [60.7, 1292.0], [60.8, 1295.0], [60.9, 1298.0], [61.0, 1302.0], [61.1, 1307.0], [61.2, 1311.0], [61.3, 1313.0], [61.4, 1317.0], [61.5, 1321.0], [61.6, 1324.0], [61.7, 1326.0], [61.8, 1329.0], [61.9, 1332.0], [62.0, 1335.0], [62.1, 1338.0], [62.2, 1341.0], [62.3, 1344.0], [62.4, 1348.0], [62.5, 1351.0], [62.6, 1354.0], [62.7, 1357.0], [62.8, 1360.0], [62.9, 1363.0], [63.0, 1366.0], [63.1, 1368.0], [63.2, 1371.0], [63.3, 1374.0], [63.4, 1376.0], [63.5, 1379.0], [63.6, 1381.0], [63.7, 1385.0], [63.8, 1388.0], [63.9, 1392.0], [64.0, 1395.0], [64.1, 1398.0], [64.2, 1400.0], [64.3, 1403.0], [64.4, 1405.0], [64.5, 1408.0], [64.6, 1410.0], [64.7, 1412.0], [64.8, 1415.0], [64.9, 1417.0], [65.0, 1419.0], [65.1, 1422.0], [65.2, 1425.0], [65.3, 1427.0], [65.4, 1430.0], [65.5, 1433.0], [65.6, 1436.0], [65.7, 1438.0], [65.8, 1440.0], [65.9, 1443.0], [66.0, 1445.0], [66.1, 1447.0], [66.2, 1451.0], [66.3, 1453.0], [66.4, 1456.0], [66.5, 1459.0], [66.6, 1462.0], [66.7, 1465.0], [66.8, 1468.0], [66.9, 1472.0], [67.0, 1474.0], [67.1, 1476.0], [67.2, 1478.0], [67.3, 1480.0], [67.4, 1483.0], [67.5, 1486.0], [67.6, 1488.0], [67.7, 1490.0], [67.8, 1493.0], [67.9, 1496.0], [68.0, 1498.0], [68.1, 1501.0], [68.2, 1503.0], [68.3, 1505.0], [68.4, 1508.0], [68.5, 1511.0], [68.6, 1513.0], [68.7, 1515.0], [68.8, 1518.0], [68.9, 1519.0], [69.0, 1522.0], [69.1, 1525.0], [69.2, 1527.0], [69.3, 1529.0], [69.4, 1531.0], [69.5, 1533.0], [69.6, 1535.0], [69.7, 1537.0], [69.8, 1539.0], [69.9, 1541.0], [70.0, 1543.0], [70.1, 1544.0], [70.2, 1546.0], [70.3, 1547.0], [70.4, 1549.0], [70.5, 1552.0], [70.6, 1553.0], [70.7, 1555.0], [70.8, 1557.0], [70.9, 1558.0], [71.0, 1560.0], [71.1, 1562.0], [71.2, 1564.0], [71.3, 1567.0], [71.4, 1569.0], [71.5, 1571.0], [71.6, 1573.0], [71.7, 1575.0], [71.8, 1577.0], [71.9, 1579.0], [72.0, 1581.0], [72.1, 1583.0], [72.2, 1585.0], [72.3, 1587.0], [72.4, 1589.0], [72.5, 1591.0], [72.6, 1592.0], [72.7, 1594.0], [72.8, 1595.0], [72.9, 1597.0], [73.0, 1599.0], [73.1, 1600.0], [73.2, 1601.0], [73.3, 1603.0], [73.4, 1605.0], [73.5, 1606.0], [73.6, 1608.0], [73.7, 1610.0], [73.8, 1611.0], [73.9, 1613.0], [74.0, 1615.0], [74.1, 1616.0], [74.2, 1618.0], [74.3, 1619.0], [74.4, 1621.0], [74.5, 1622.0], [74.6, 1624.0], [74.7, 1626.0], [74.8, 1627.0], [74.9, 1629.0], [75.0, 1630.0], [75.1, 1632.0], [75.2, 1635.0], [75.3, 1636.0], [75.4, 1637.0], [75.5, 1639.0], [75.6, 1641.0], [75.7, 1643.0], [75.8, 1645.0], [75.9, 1647.0], [76.0, 1649.0], [76.1, 1650.0], [76.2, 1653.0], [76.3, 1654.0], [76.4, 1656.0], [76.5, 1658.0], [76.6, 1660.0], [76.7, 1661.0], [76.8, 1664.0], [76.9, 1665.0], [77.0, 1667.0], [77.1, 1669.0], [77.2, 1670.0], [77.3, 1672.0], [77.4, 1674.0], [77.5, 1676.0], [77.6, 1677.0], [77.7, 1680.0], [77.8, 1681.0], [77.9, 1683.0], [78.0, 1685.0], [78.1, 1686.0], [78.2, 1688.0], [78.3, 1690.0], [78.4, 1691.0], [78.5, 1692.0], [78.6, 1694.0], [78.7, 1696.0], [78.8, 1697.0], [78.9, 1698.0], [79.0, 1701.0], [79.1, 1702.0], [79.2, 1704.0], [79.3, 1705.0], [79.4, 1707.0], [79.5, 1709.0], [79.6, 1710.0], [79.7, 1712.0], [79.8, 1714.0], [79.9, 1716.0], [80.0, 1718.0], [80.1, 1720.0], [80.2, 1721.0], [80.3, 1723.0], [80.4, 1725.0], [80.5, 1727.0], [80.6, 1729.0], [80.7, 1731.0], [80.8, 1734.0], [80.9, 1735.0], [81.0, 1736.0], [81.1, 1739.0], [81.2, 1740.0], [81.3, 1742.0], [81.4, 1744.0], [81.5, 1746.0], [81.6, 1748.0], [81.7, 1750.0], [81.8, 1752.0], [81.9, 1755.0], [82.0, 1757.0], [82.1, 1759.0], [82.2, 1761.0], [82.3, 1762.0], [82.4, 1764.0], [82.5, 1765.0], [82.6, 1767.0], [82.7, 1769.0], [82.8, 1771.0], [82.9, 1773.0], [83.0, 1775.0], [83.1, 1777.0], [83.2, 1778.0], [83.3, 1780.0], [83.4, 1782.0], [83.5, 1783.0], [83.6, 1785.0], [83.7, 1786.0], [83.8, 1789.0], [83.9, 1790.0], [84.0, 1792.0], [84.1, 1794.0], [84.2, 1796.0], [84.3, 1798.0], [84.4, 1800.0], [84.5, 1801.0], [84.6, 1803.0], [84.7, 1805.0], [84.8, 1807.0], [84.9, 1809.0], [85.0, 1811.0], [85.1, 1813.0], [85.2, 1816.0], [85.3, 1818.0], [85.4, 1820.0], [85.5, 1822.0], [85.6, 1824.0], [85.7, 1826.0], [85.8, 1829.0], [85.9, 1832.0], [86.0, 1835.0], [86.1, 1838.0], [86.2, 1841.0], [86.3, 1844.0], [86.4, 1847.0], [86.5, 1848.0], [86.6, 1851.0], [86.7, 1853.0], [86.8, 1856.0], [86.9, 1859.0], [87.0, 1861.0], [87.1, 1863.0], [87.2, 1865.0], [87.3, 1867.0], [87.4, 1870.0], [87.5, 1872.0], [87.6, 1874.0], [87.7, 1876.0], [87.8, 1878.0], [87.9, 1881.0], [88.0, 1884.0], [88.1, 1886.0], [88.2, 1889.0], [88.3, 1890.0], [88.4, 1892.0], [88.5, 1895.0], [88.6, 1898.0], [88.7, 1900.0], [88.8, 1902.0], [88.9, 1904.0], [89.0, 1907.0], [89.1, 1909.0], [89.2, 1911.0], [89.3, 1914.0], [89.4, 1916.0], [89.5, 1919.0], [89.6, 1921.0], [89.7, 1925.0], [89.8, 1928.0], [89.9, 1932.0], [90.0, 1934.0], [90.1, 1938.0], [90.2, 1940.0], [90.3, 1945.0], [90.4, 1949.0], [90.5, 1951.0], [90.6, 1955.0], [90.7, 1958.0], [90.8, 1961.0], [90.9, 1963.0], [91.0, 1966.0], [91.1, 1969.0], [91.2, 1973.0], [91.3, 1976.0], [91.4, 1979.0], [91.5, 1981.0], [91.6, 1985.0], [91.7, 1988.0], [91.8, 1991.0], [91.9, 1995.0], [92.0, 1998.0], [92.1, 2002.0], [92.2, 2006.0], [92.3, 2009.0], [92.4, 2012.0], [92.5, 2015.0], [92.6, 2019.0], [92.7, 2022.0], [92.8, 2025.0], [92.9, 2028.0], [93.0, 2032.0], [93.1, 2037.0], [93.2, 2041.0], [93.3, 2046.0], [93.4, 2051.0], [93.5, 2056.0], [93.6, 2061.0], [93.7, 2065.0], [93.8, 2069.0], [93.9, 2076.0], [94.0, 2083.0], [94.1, 2089.0], [94.2, 2095.0], [94.3, 2099.0], [94.4, 2105.0], [94.5, 2110.0], [94.6, 2114.0], [94.7, 2120.0], [94.8, 2125.0], [94.9, 2130.0], [95.0, 2134.0], [95.1, 2140.0], [95.2, 2145.0], [95.3, 2150.0], [95.4, 2154.0], [95.5, 2159.0], [95.6, 2166.0], [95.7, 2172.0], [95.8, 2178.0], [95.9, 2185.0], [96.0, 2192.0], [96.1, 2199.0], [96.2, 2206.0], [96.3, 2212.0], [96.4, 2219.0], [96.5, 2225.0], [96.6, 2232.0], [96.7, 2238.0], [96.8, 2246.0], [96.9, 2254.0], [97.0, 2263.0], [97.1, 2271.0], [97.2, 2277.0], [97.3, 2283.0], [97.4, 2291.0], [97.5, 2297.0], [97.6, 2306.0], [97.7, 2321.0], [97.8, 2331.0], [97.9, 2339.0], [98.0, 2350.0], [98.1, 2358.0], [98.2, 2368.0], [98.3, 2378.0], [98.4, 2387.0], [98.5, 2397.0], [98.6, 2411.0], [98.7, 2422.0], [98.8, 2441.0], [98.9, 2461.0], [99.0, 2470.0], [99.1, 2481.0], [99.2, 2503.0], [99.3, 2528.0], [99.4, 2555.0], [99.5, 2593.0], [99.6, 2638.0], [99.7, 2721.0], [99.8, 2868.0], [99.9, 3260.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 29865.0, "series": [{"data": [[0.0, 29865.0], [100.0, 130.0], [200.0, 4.0], [800.0, 1.0]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[600.0, 713.0], [700.0, 557.0], [800.0, 329.0], [900.0, 168.0], [1000.0, 67.0], [1100.0, 266.0], [1200.0, 662.0], [1300.0, 971.0], [1400.0, 1161.0], [1500.0, 1511.0], [1600.0, 1760.0], [1700.0, 1636.0], [1800.0, 1284.0], [1900.0, 1009.0], [2000.0, 679.0], [2100.0, 544.0], [2200.0, 422.0], [2300.0, 298.0], [2400.0, 200.0], [2500.0, 95.0], [2600.0, 47.0], [2700.0, 27.0], [2800.0, 21.0], [2900.0, 15.0], [3000.0, 6.0], [3100.0, 2.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 5.0], [3800.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [6500.0, 1.0], [6400.0, 1.0], [7000.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [7800.0, 2.0], [7900.0, 1.0], [7700.0, 1.0], [8100.0, 1.0], [8700.0, 1.0], [8600.0, 1.0], [8800.0, 2.0], [9600.0, 1.0], [9900.0, 1.0], [11000.0, 1.0], [13100.0, 1.0], [14200.0, 1.0], [15000.0, 1.0], [100.0, 1601.0], [200.0, 11159.0], [300.0, 1045.0], [400.0, 961.0], [500.0, 753.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5657.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 44771.0, "series": [{"data": [[0.0, 44771.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5657.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 9572.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.6176470588235294, "minX": 1.73815722E12, "maxY": 3.0, "series": [{"data": [[1.73815836E12, 3.0], [1.73816178E12, 3.0], [1.738164E12, 3.0], [1.73816058E12, 3.0], [1.73816502E12, 3.0], [1.7381628E12, 3.0], [1.73816604E12, 3.0], [1.73815734E12, 3.0], [1.73815956E12, 3.0], [1.73816382E12, 3.0], [1.73816418E12, 3.0], [1.73815854E12, 3.0], [1.73816076E12, 3.0], [1.73815752E12, 3.0], [1.73816196E12, 3.0], [1.7381664E12, 3.0], [1.73815974E12, 3.0], [1.73816298E12, 3.0], [1.7381652E12, 3.0], [1.73816622E12, 3.0], [1.73815872E12, 3.0], [1.73816466E12, 3.0], [1.73815902E12, 3.0], [1.73816124E12, 3.0], [1.738158E12, 3.0], [1.73816244E12, 3.0], [1.73816022E12, 3.0], [1.73816346E12, 3.0], [1.73816568E12, 3.0], [1.7381667E12, 1.6176470588235294], [1.7381592E12, 3.0], [1.73816142E12, 3.0], [1.7381616E12, 3.0], [1.73816262E12, 3.0], [1.73816484E12, 3.0], [1.73815818E12, 3.0], [1.7381604E12, 3.0], [1.73815938E12, 3.0], [1.73816364E12, 3.0], [1.73816586E12, 3.0], [1.7381637E12, 3.0], [1.73815806E12, 3.0], [1.73816028E12, 3.0], [1.73816592E12, 3.0], [1.73815926E12, 3.0], [1.73816148E12, 3.0], [1.73816472E12, 3.0], [1.7381625E12, 3.0], [1.73816574E12, 3.0], [1.73815824E12, 3.0], [1.73815722E12, 2.9918032786885242], [1.73816046E12, 3.0], [1.73815944E12, 3.0], [1.73816166E12, 3.0], [1.73816388E12, 3.0], [1.7381661E12, 3.0], [1.7381649E12, 3.0], [1.73816268E12, 3.0], [1.73815842E12, 3.0], [1.73816064E12, 3.0], [1.73816094E12, 3.0], [1.7381577E12, 3.0], [1.73815992E12, 3.0], [1.73816214E12, 3.0], [1.73816436E12, 3.0], [1.73816658E12, 3.0], [1.73816538E12, 3.0], [1.73816316E12, 3.0], [1.7381589E12, 3.0], [1.73816112E12, 3.0], [1.73816352E12, 3.0], [1.73815788E12, 3.0], [1.7381601E12, 3.0], [1.73816454E12, 3.0], [1.73815908E12, 3.0], [1.73816232E12, 3.0], [1.7381613E12, 3.0], [1.73816334E12, 3.0], [1.73816556E12, 3.0], [1.73816562E12, 3.0], [1.73815998E12, 3.0], [1.73815896E12, 3.0], [1.7381634E12, 3.0], [1.73816118E12, 3.0], [1.73816442E12, 3.0], [1.7381622E12, 3.0], [1.73816664E12, 2.824817518248175], [1.73815794E12, 3.0], [1.73816016E12, 3.0], [1.73816256E12, 3.0], [1.7381658E12, 3.0], [1.73815914E12, 3.0], [1.73816136E12, 3.0], [1.73816358E12, 3.0], [1.73815812E12, 3.0], [1.73816034E12, 3.0], [1.73816238E12, 3.0], [1.7381646E12, 3.0], [1.73816304E12, 3.0], [1.7381574E12, 3.0], [1.73816628E12, 3.0], [1.73815962E12, 3.0], [1.73816406E12, 3.0], [1.7381586E12, 3.0], [1.73816184E12, 3.0], [1.73816082E12, 3.0], [1.73816286E12, 3.0], [1.73816508E12, 3.0], [1.73816322E12, 3.0], [1.73816544E12, 3.0], [1.73815758E12, 3.0], [1.7381598E12, 3.0], [1.73816646E12, 3.0], [1.73815878E12, 3.0], [1.738161E12, 3.0], [1.73816202E12, 3.0], [1.73816424E12, 3.0], [1.73816526E12, 3.0], [1.73815776E12, 3.0], [1.73816208E12, 3.0], [1.73815866E12, 3.0], [1.73816088E12, 3.0], [1.7381631E12, 3.0], [1.73816532E12, 3.0], [1.73815764E12, 3.0], [1.73815986E12, 3.0], [1.7381619E12, 3.0], [1.73816412E12, 3.0], [1.73816634E12, 3.0], [1.73815884E12, 3.0], [1.73816226E12, 3.0], [1.73816448E12, 3.0], [1.73816106E12, 3.0], [1.7381655E12, 3.0], [1.73816328E12, 3.0], [1.73816652E12, 3.0], [1.73815782E12, 3.0], [1.73816004E12, 3.0], [1.7381643E12, 3.0], [1.73815932E12, 3.0], [1.73816274E12, 3.0], [1.73816496E12, 3.0], [1.73816598E12, 3.0], [1.73815728E12, 3.0], [1.73816052E12, 3.0], [1.7381583E12, 3.0], [1.73816154E12, 3.0], [1.73816376E12, 3.0], [1.73816478E12, 3.0], [1.73816514E12, 3.0], [1.7381595E12, 3.0], [1.73815848E12, 3.0], [1.73816292E12, 3.0], [1.7381607E12, 3.0], [1.73816394E12, 3.0], [1.73816172E12, 3.0], [1.73816616E12, 3.0], [1.73815746E12, 3.0], [1.73815968E12, 3.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7381667E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.28571428571429, "minX": 1.0, "maxY": 2249.2058823529414, "series": [{"data": [[2.0, 19.96969696969697], [1.0, 18.28571428571429], [3.0, 26.01539077888683]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[2.997966666666662, 26.005133333333408]], "isOverall": false, "label": "OS Process Sampler-Aggregated", "isController": false}, {"data": [[2.0, 2249.2058823529414], [1.0, 2200.538461538462], [3.0, 916.958868894598]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[2.9979999999999993, 919.024966666663]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 361.93333333333334, "minX": 1.73815722E12, "maxY": 44809.566666666666, "series": [{"data": [[1.73815836E12, 34885.25], [1.73816178E12, 6825.4], [1.738164E12, 6635.433333333333], [1.73816058E12, 7204.166666666667], [1.73816502E12, 5688.0], [1.7381628E12, 5561.166666666667], [1.73816604E12, 5498.0], [1.73815734E12, 44809.566666666666], [1.73815956E12, 8342.4], [1.73816382E12, 6446.233333333334], [1.73816418E12, 6446.5], [1.73815854E12, 30152.416666666668], [1.73816076E12, 7204.433333333333], [1.73815752E12, 40818.5], [1.73816196E12, 6635.733333333334], [1.7381664E12, 4549.983333333334], [1.73815974E12, 8721.366666666667], [1.73816298E12, 6067.05], [1.7381652E12, 5687.783333333334], [1.73816622E12, 4929.533333333334], [1.73815872E12, 26038.316666666666], [1.73816466E12, 6256.8], [1.73815902E12, 16873.25], [1.73816124E12, 6635.683333333333], [1.738158E12, 38233.45], [1.73816244E12, 6446.366666666667], [1.73816022E12, 8152.516666666666], [1.73816346E12, 6256.6], [1.73816568E12, 5308.283333333334], [1.7381667E12, 2195.4333333333334], [1.7381592E12, 1390.3], [1.73816142E12, 7204.066666666667], [1.7381616E12, 7395.083333333333], [1.73816262E12, 5877.8], [1.73816484E12, 6067.633333333333], [1.73815818E12, 36590.45], [1.7381604E12, 7773.666666666667], [1.73815938E12, 10555.083333333334], [1.73816364E12, 6825.283333333334], [1.73816586E12, 4550.333333333333], [1.7381637E12, 6066.6], [1.73815806E12, 38613.55], [1.73816028E12, 8531.95], [1.73816592E12, 5119.216666666666], [1.73815926E12, 13714.0], [1.73816148E12, 7204.35], [1.73816472E12, 5877.75], [1.7381625E12, 6446.266666666666], [1.73816574E12, 5308.566666666667], [1.73815824E12, 37277.45], [1.73815722E12, 11519.05], [1.73816046E12, 7709.783333333334], [1.73815944E12, 8531.683333333332], [1.73816166E12, 7015.316666666667], [1.73816388E12, 6825.233333333334], [1.7381661E12, 5308.333333333333], [1.7381649E12, 5687.633333333333], [1.73816268E12, 6446.283333333334], [1.73815842E12, 34949.28333333333], [1.73816064E12, 7646.166666666667], [1.73816094E12, 7773.816666666667], [1.7381577E12, 41023.76666666667], [1.73815992E12, 8720.533333333333], [1.73816214E12, 6636.066666666667], [1.73816436E12, 6256.8], [1.73816658E12, 4740.15], [1.73816538E12, 5309.266666666666], [1.73816316E12, 5687.45], [1.7381589E12, 19275.216666666667], [1.73816112E12, 6446.55], [1.73816352E12, 6446.183333333333], [1.73815788E12, 39434.51666666667], [1.7381601E12, 7394.366666666667], [1.73816454E12, 6066.966666666666], [1.73815908E12, 15333.116666666667], [1.73816232E12, 6825.233333333334], [1.7381613E12, 7204.15], [1.73816334E12, 6446.683333333333], [1.73816556E12, 5118.4], [1.73816562E12, 5308.5], [1.73815998E12, 7773.933333333333], [1.73815896E12, 16683.416666666668], [1.7381634E12, 6445.933333333333], [1.73816118E12, 6635.783333333334], [1.73816442E12, 5687.333333333333], [1.7381622E12, 6445.8], [1.73816664E12, 4352.433333333333], [1.73815794E12, 39373.666666666664], [1.73816016E12, 7583.666666666667], [1.73816256E12, 6066.433333333333], [1.7381658E12, 5308.516666666666], [1.73815914E12, 12726.9], [1.73816136E12, 6825.0], [1.73816358E12, 6825.233333333334], [1.73815812E12, 38043.96666666667], [1.73816034E12, 7648.466666666666], [1.73816238E12, 6636.0], [1.7381646E12, 5687.95], [1.73816304E12, 6067.783333333334], [1.7381574E12, 40573.46666666667], [1.73816628E12, 5118.733333333334], [1.73815962E12, 7962.183333333333], [1.73816406E12, 6635.833333333333], [1.7381586E12, 29261.8], [1.73816184E12, 6635.866666666667], [1.73816082E12, 7583.866666666667], [1.73816286E12, 5876.9], [1.73816508E12, 5877.266666666666], [1.73816322E12, 5688.05], [1.73816544E12, 5118.916666666667], [1.73815758E12, 41078.183333333334], [1.7381598E12, 8721.566666666668], [1.73816646E12, 4929.583333333333], [1.73815878E12, 24402.283333333333], [1.738161E12, 6825.816666666667], [1.73816202E12, 6635.5], [1.73816424E12, 6066.783333333334], [1.73816526E12, 5309.2], [1.73815776E12, 40887.55], [1.73816208E12, 6635.75], [1.73815866E12, 29440.033333333333], [1.73816088E12, 7078.5], [1.7381631E12, 5877.666666666667], [1.73816532E12, 5688.166666666667], [1.73815764E12, 42280.3], [1.73815986E12, 8909.85], [1.7381619E12, 6445.533333333334], [1.73816412E12, 6635.483333333334], [1.73816634E12, 5309.016666666666], [1.73815884E12, 21361.7], [1.73816226E12, 6635.883333333333], [1.73816448E12, 6256.2], [1.73816106E12, 6824.366666666667], [1.7381655E12, 5119.416666666667], [1.73816328E12, 6256.983333333334], [1.73816652E12, 4740.016666666666], [1.73815782E12, 41333.48333333333], [1.73816004E12, 7773.8], [1.7381643E12, 6067.283333333334], [1.73815932E12, 12134.516666666666], [1.73816274E12, 6255.75], [1.73816496E12, 5878.233333333334], [1.73816598E12, 5119.433333333333], [1.73815728E12, 44752.71666666667], [1.73816052E12, 7773.633333333333], [1.7381583E12, 33061.48333333333], [1.73816154E12, 7014.35], [1.73816376E12, 6445.55], [1.73816478E12, 5877.566666666667], [1.73816514E12, 5497.916666666667], [1.7381595E12, 7962.35], [1.73815848E12, 32855.0], [1.73816292E12, 6446.716666666666], [1.7381607E12, 7520.2], [1.73816394E12, 6256.683333333333], [1.73816172E12, 6825.266666666666], [1.73816616E12, 4929.016666666666], [1.73815746E12, 41519.566666666666], [1.73815968E12, 8152.116666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73815836E12, 9080.066666666668], [1.73816178E12, 1776.1333333333334], [1.738164E12, 1727.3333333333333], [1.73816058E12, 1875.3333333333333], [1.73816502E12, 1480.5333333333333], [1.7381628E12, 1447.7333333333333], [1.73816604E12, 1431.0], [1.73815734E12, 11664.066666666668], [1.73815956E12, 2171.866666666667], [1.73816382E12, 1677.8], [1.73816418E12, 1677.6], [1.73815854E12, 7846.133333333333], [1.73816076E12, 1875.0], [1.73815752E12, 10627.0], [1.73816196E12, 1727.3333333333333], [1.7381664E12, 1184.5333333333333], [1.73815974E12, 2270.266666666667], [1.73816298E12, 1579.0], [1.7381652E12, 1480.4666666666667], [1.73816622E12, 1283.1333333333334], [1.73815872E12, 6776.933333333333], [1.73816466E12, 1628.8], [1.73815902E12, 4392.466666666666], [1.73816124E12, 1727.4666666666667], [1.738158E12, 9950.8], [1.73816244E12, 1677.6666666666667], [1.73816022E12, 2122.133333333333], [1.73816346E12, 1628.3333333333333], [1.73816568E12, 1381.4666666666667], [1.7381667E12, 575.6], [1.7381592E12, 361.93333333333334], [1.73816142E12, 1874.8666666666666], [1.7381616E12, 1925.5333333333333], [1.73816262E12, 1529.8666666666666], [1.73816484E12, 1579.4], [1.73815818E12, 9524.333333333334], [1.7381604E12, 2023.8], [1.73815938E12, 2747.6666666666665], [1.73816364E12, 1776.4], [1.73816586E12, 1184.2666666666667], [1.7381637E12, 1579.0], [1.73815806E12, 10050.866666666667], [1.73816028E12, 2220.4], [1.73816592E12, 1332.4], [1.73815926E12, 3569.4], [1.73816148E12, 1875.3333333333333], [1.73816472E12, 1530.0], [1.7381625E12, 1678.3333333333333], [1.73816574E12, 1382.1333333333334], [1.73815824E12, 9704.333333333334], [1.73815722E12, 2994.266666666667], [1.73816046E12, 2006.4666666666667], [1.73815944E12, 2220.866666666667], [1.73816166E12, 1825.9333333333334], [1.73816388E12, 1776.0666666666666], [1.7381661E12, 1381.3333333333333], [1.7381649E12, 1480.2], [1.73816268E12, 1678.0], [1.73815842E12, 9096.2], [1.73816064E12, 1990.0], [1.73816094E12, 2023.2666666666667], [1.7381577E12, 10676.6], [1.73815992E12, 2269.9333333333334], [1.73816214E12, 1727.2], [1.73816436E12, 1628.4666666666667], [1.73816658E12, 1234.0666666666666], [1.73816538E12, 1382.2], [1.73816316E12, 1480.2], [1.7381589E12, 5017.466666666666], [1.73816112E12, 1678.1333333333334], [1.73816352E12, 1678.0], [1.73815788E12, 10265.6], [1.7381601E12, 1924.4666666666667], [1.73816454E12, 1579.3333333333333], [1.73815908E12, 3997.4666666666667], [1.73816232E12, 1776.2666666666667], [1.7381613E12, 1875.3333333333333], [1.73816334E12, 1678.1333333333334], [1.73816556E12, 1332.1333333333334], [1.73816562E12, 1381.4666666666667], [1.73815998E12, 2023.3333333333333], [1.73815896E12, 4342.333333333333], [1.7381634E12, 1677.5333333333333], [1.73816118E12, 1727.2], [1.73816442E12, 1480.0666666666666], [1.7381622E12, 1677.8], [1.73816664E12, 1134.9333333333334], [1.73815794E12, 10248.6], [1.73816016E12, 1974.0], [1.73816256E12, 1578.7333333333333], [1.7381658E12, 1381.9333333333334], [1.73815914E12, 3306.133333333333], [1.73816136E12, 1776.2666666666667], [1.73816358E12, 1776.5333333333333], [1.73815812E12, 9902.133333333333], [1.73816034E12, 1990.7333333333333], [1.73816238E12, 1727.2666666666667], [1.7381646E12, 1480.2666666666667], [1.73816304E12, 1579.8], [1.7381574E12, 10561.466666666667], [1.73816628E12, 1332.5333333333333], [1.73815962E12, 2072.4], [1.73816406E12, 1727.0666666666666], [1.7381586E12, 7617.533333333334], [1.73816184E12, 1727.2666666666667], [1.73816082E12, 1974.0], [1.73816286E12, 1529.7333333333333], [1.73816508E12, 1529.8666666666666], [1.73816322E12, 1480.5333333333333], [1.73816544E12, 1332.4], [1.73815758E12, 10691.466666666667], [1.7381598E12, 2269.9333333333334], [1.73816646E12, 1283.3333333333333], [1.73815878E12, 6349.8], [1.738161E12, 1776.5333333333333], [1.73816202E12, 1726.8666666666666], [1.73816424E12, 1579.1333333333334], [1.73816526E12, 1381.5333333333333], [1.73815776E12, 10643.066666666668], [1.73816208E12, 1727.0], [1.73815866E12, 7665.2], [1.73816088E12, 1842.8], [1.7381631E12, 1529.6666666666667], [1.73816532E12, 1480.4666666666667], [1.73815764E12, 11004.6], [1.73815986E12, 2319.2], [1.7381619E12, 1677.5333333333333], [1.73816412E12, 1727.0666666666666], [1.73816634E12, 1382.2666666666667], [1.73815884E12, 5560.466666666666], [1.73816226E12, 1726.9333333333334], [1.73816448E12, 1628.3333333333333], [1.73816106E12, 1775.7333333333333], [1.7381655E12, 1332.6], [1.73816328E12, 1628.5333333333333], [1.73816652E12, 1233.9333333333334], [1.73815782E12, 10759.533333333333], [1.73816004E12, 2023.8666666666666], [1.7381643E12, 1579.5333333333333], [1.73815932E12, 3158.6666666666665], [1.73816274E12, 1627.7333333333333], [1.73816496E12, 1530.5333333333333], [1.73816598E12, 1332.4], [1.73815728E12, 11647.133333333333], [1.73816052E12, 2023.4666666666667], [1.7381583E12, 8604.0], [1.73816154E12, 1825.6666666666667], [1.73816376E12, 1677.8], [1.73816478E12, 1529.6666666666667], [1.73816514E12, 1430.8666666666666], [1.7381595E12, 2072.4666666666667], [1.73815848E12, 8554.2], [1.73816292E12, 1678.4666666666667], [1.7381607E12, 1957.5333333333333], [1.73816394E12, 1628.7333333333333], [1.73816172E12, 1776.5333333333333], [1.73816616E12, 1282.8666666666666], [1.73815746E12, 10806.133333333333], [1.73815968E12, 2121.5333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7381667E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 18.939393939393938, "minX": 1.73815722E12, "maxY": 7137.727272727272, "series": [{"data": [[1.73815836E12, 25.95833333333335], [1.73816178E12, 24.60185185185186], [1.738164E12, 23.5047619047619], [1.73816058E12, 20.964912280701757], [1.73816502E12, 24.255555555555556], [1.7381628E12, 34.36363636363637], [1.73816604E12, 24.563218390804597], [1.73815734E12, 24.88857545839211], [1.73815956E12, 25.833333333333346], [1.73816382E12, 25.205882352941185], [1.73816418E12, 24.75490196078431], [1.73815854E12, 27.489539748953973], [1.73816076E12, 21.42105263157895], [1.73815752E12, 27.710077519379848], [1.73816196E12, 24.44761904761904], [1.7381664E12, 34.75], [1.73815974E12, 24.0072463768116], [1.73816298E12, 25.437500000000007], [1.7381652E12, 24.35555555555555], [1.73816622E12, 25.512820512820515], [1.73815872E12, 26.531553398058275], [1.73816466E12, 23.454545454545467], [1.73815902E12, 24.850187265917608], [1.73816124E12, 25.133333333333336], [1.738158E12, 26.036363636363618], [1.73816244E12, 24.715686274509803], [1.73816022E12, 23.906976744186043], [1.73816346E12, 24.39393939393939], [1.73816568E12, 25.55952380952381], [1.7381667E12, 18.939393939393938], [1.7381592E12, 72.45454545454545], [1.73816142E12, 24.77192982456141], [1.7381616E12, 24.401709401709397], [1.73816262E12, 26.720430107526877], [1.73816484E12, 24.458333333333336], [1.73815818E12, 24.75647668393784], [1.7381604E12, 21.97560975609756], [1.73815938E12, 25.209580838323348], [1.73816364E12, 24.22222222222222], [1.73816586E12, 25.763888888888893], [1.7381637E12, 35.770833333333336], [1.73815806E12, 26.39443535188216], [1.73816028E12, 24.48888888888889], [1.73816592E12, 25.01234567901234], [1.73815926E12, 26.66359447004608], [1.73816148E12, 26.157894736842106], [1.73816472E12, 25.50537634408602], [1.7381625E12, 24.735294117647058], [1.73816574E12, 26.10714285714286], [1.73815824E12, 24.628183361629898], [1.73815722E12, 26.864130434782602], [1.73816046E12, 21.450819672131146], [1.73815944E12, 23.58518518518518], [1.73816166E12, 25.162162162162176], [1.73816388E12, 24.268518518518515], [1.7381661E12, 26.678571428571427], [1.7381649E12, 24.555555555555554], [1.73816268E12, 24.95098039215686], [1.73815842E12, 26.122965641952955], [1.73816064E12, 21.388429752066113], [1.73816094E12, 25.585365853658534], [1.7381577E12, 25.429230769230777], [1.73815992E12, 24.760869565217387], [1.73816214E12, 24.285714285714274], [1.73816436E12, 24.313131313131308], [1.73816658E12, 25.56], [1.73816538E12, 25.095238095238106], [1.73816316E12, 25.077777777777776], [1.7381589E12, 26.199999999999996], [1.73816112E12, 27.480392156862745], [1.73816352E12, 25.274509803921568], [1.73815788E12, 25.37820512820513], [1.7381601E12, 32.18803418803418], [1.73816454E12, 24.66666666666667], [1.73815908E12, 23.633333333333336], [1.73816232E12, 25.296296296296283], [1.7381613E12, 26.00877192982456], [1.73816334E12, 25.19607843137254], [1.73816556E12, 26.03703703703704], [1.73816562E12, 24.476190476190478], [1.73815998E12, 26.170731707317074], [1.73815896E12, 25.886363636363644], [1.7381634E12, 24.823529411764707], [1.73816118E12, 25.714285714285708], [1.73816442E12, 24.922222222222224], [1.7381622E12, 26.441176470588243], [1.73816664E12, 25.48529411764706], [1.73815794E12, 26.13964686998393], [1.73816016E12, 26.058333333333334], [1.73816256E12, 26.343749999999986], [1.7381658E12, 25.6547619047619], [1.73815914E12, 25.97058823529412], [1.73816136E12, 25.046296296296283], [1.73816358E12, 24.574074074074062], [1.73815812E12, 24.90863787375417], [1.73816034E12, 24.793388429752067], [1.73816238E12, 24.114285714285717], [1.7381646E12, 36.822222222222216], [1.73816304E12, 24.48958333333333], [1.7381574E12, 32.71028037383179], [1.73816628E12, 24.77777777777778], [1.73815962E12, 22.58730158730158], [1.73816406E12, 24.780952380952378], [1.7381586E12, 25.978401727861783], [1.73816184E12, 24.68571428571429], [1.73816082E12, 21.55], [1.73816286E12, 25.387096774193544], [1.73816508E12, 25.215053763440856], [1.73816322E12, 26.222222222222214], [1.73816544E12, 26.419753086419757], [1.73815758E12, 28.721538461538458], [1.7381598E12, 23.55072463768118], [1.73816646E12, 25.410256410256412], [1.73815878E12, 26.679586563307495], [1.738161E12, 33.898148148148174], [1.73816202E12, 25.599999999999994], [1.73816424E12, 24.64583333333332], [1.73816526E12, 24.190476190476193], [1.73815776E12, 24.55795981452859], [1.73816208E12, 25.285714285714292], [1.73815866E12, 25.565591397849463], [1.73816088E12, 23.624999999999996], [1.7381631E12, 25.279569892473113], [1.73816532E12, 24.988888888888876], [1.73815764E12, 27.142002989536614], [1.73815986E12, 24.00709219858156], [1.7381619E12, 34.26470588235294], [1.73816412E12, 24.647619047619056], [1.73816634E12, 26.511904761904763], [1.73815884E12, 26.062130177514792], [1.73816226E12, 24.36190476190478], [1.73816448E12, 24.878787878787865], [1.73816106E12, 25.564814814814827], [1.7381655E12, 35.08641975308643], [1.73816328E12, 25.2020202020202], [1.73816652E12, 26.373333333333335], [1.73815782E12, 25.4525993883792], [1.73816004E12, 24.943089430894304], [1.7381643E12, 25.187499999999996], [1.73815932E12, 26.26041666666666], [1.73816274E12, 25.303030303030294], [1.73816496E12, 24.225806451612907], [1.73816598E12, 25.123456790123445], [1.73815728E12, 25.85754583921017], [1.73816052E12, 20.894308943089438], [1.7381583E12, 32.51145038167941], [1.73816154E12, 25.801801801801805], [1.73816376E12, 24.225490196078432], [1.73816478E12, 24.978494623655912], [1.73816514E12, 24.080459770114942], [1.7381595E12, 24.84126984126983], [1.73815848E12, 27.175337186897874], [1.73816292E12, 26.03921568627451], [1.7381607E12, 20.949579831932773], [1.73816394E12, 26.020202020202017], [1.73816172E12, 25.462962962962962], [1.73816616E12, 25.717948717948723], [1.73815746E12, 26.491628614916298], [1.73815968E12, 25.410852713178297]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[1.73815836E12, 299.39673913043504], [1.73816178E12, 1643.7870370370374], [1.738164E12, 1713.466666666667], [1.73816058E12, 1541.798245614035], [1.73816502E12, 1966.233333333333], [1.7381628E12, 2037.1249999999995], [1.73816604E12, 2092.609195402299], [1.73815734E12, 227.92947813822292], [1.73815956E12, 1349.9621212121206], [1.73816382E12, 1754.4411764705883], [1.73816418E12, 1744.5686274509808], [1.73815854E12, 349.89727463312374], [1.73816076E12, 1556.1666666666667], [1.73815752E12, 250.95665634674938], [1.73816196E12, 1688.6571428571433], [1.7381664E12, 2451.8194444444443], [1.73815974E12, 1278.2028985507243], [1.73816298E12, 1817.8229166666667], [1.7381652E12, 2007.2888888888888], [1.73816622E12, 2265.730769230769], [1.73815872E12, 410.18932038834964], [1.73816466E12, 1819.4444444444446], [1.73815902E12, 646.7078651685391], [1.73816124E12, 1669.8857142857141], [1.738158E12, 272.2661157024793], [1.73816244E12, 1752.411764705882], [1.73816022E12, 1360.953488372092], [1.73816346E12, 1755.1717171717175], [1.73816568E12, 2089.7976190476197], [1.7381667E12, 2242.057142857143], [1.7381592E12, 7137.727272727272], [1.73816142E12, 1541.508771929825], [1.7381616E12, 1520.8974358974358], [1.73816262E12, 1887.279569892473], [1.73816484E12, 1843.2395833333335], [1.73815818E12, 285.314335060449], [1.7381604E12, 1448.0325203252028], [1.73815938E12, 1047.6227544910175], [1.73816364E12, 1646.6388888888887], [1.73816586E12, 2396.0], [1.7381637E12, 1810.802083333333], [1.73815806E12, 267.900163666121], [1.73816028E12, 1320.0814814814805], [1.73816592E12, 2236.9629629629626], [1.73815926E12, 915.0691244239634], [1.73816148E12, 1556.535087719298], [1.73816472E12, 1882.0860215053765], [1.7381625E12, 1699.1960784313726], [1.73816574E12, 2138.0119047619046], [1.73815824E12, 280.279661016949], [1.73815722E12, 229.97252747252742], [1.73816046E12, 1464.1311475409832], [1.73815944E12, 1322.1777777777777], [1.73816166E12, 1593.756756756757], [1.73816388E12, 1662.4722222222224], [1.7381661E12, 2082.5476190476193], [1.7381649E12, 1925.7777777777774], [1.73816268E12, 1758.93137254902], [1.73815842E12, 299.07233273056045], [1.73816064E12, 1465.8264462809918], [1.73816094E12, 1455.1300813008133], [1.7381577E12, 251.2080123266562], [1.73815992E12, 1264.4202898550723], [1.73816214E12, 1694.7714285714283], [1.73816436E12, 1811.3232323232317], [1.73816658E12, 2388.613333333333], [1.73816538E12, 2103.7738095238105], [1.73816316E12, 1975.7333333333331], [1.7381589E12, 564.0327868852459], [1.73816112E12, 1732.519607843137], [1.73816352E12, 1742.6274509803923], [1.73815788E12, 262.3012820512821], [1.7381601E12, 1535.3760683760681], [1.73816454E12, 1841.3749999999995], [1.73815908E12, 722.3539094650208], [1.73816232E12, 1655.416666666667], [1.7381613E12, 1572.938596491228], [1.73816334E12, 1748.9411764705883], [1.73816556E12, 2159.9135802469136], [1.73816562E12, 2129.107142857143], [1.73815998E12, 1460.0487804878044], [1.73815896E12, 656.4204545454545], [1.7381634E12, 1737.3333333333337], [1.73816118E12, 1685.0952380952378], [1.73816442E12, 1925.1333333333337], [1.7381622E12, 1761.4607843137255], [1.73816664E12, 2377.7391304347816], [1.73815794E12, 260.9662921348318], [1.73816016E12, 1457.416666666666], [1.73816256E12, 1879.3020833333337], [1.7381658E12, 2145.595238095237], [1.73815914E12, 845.4975124378103], [1.73816136E12, 1625.4814814814818], [1.73816358E12, 1659.5277777777774], [1.73815812E12, 273.81893687707617], [1.73816034E12, 1449.8842975206624], [1.73816238E12, 1684.7238095238097], [1.7381646E12, 1946.1777777777777], [1.73816304E12, 1870.843749999999], [1.7381574E12, 244.66355140186926], [1.73816628E12, 2197.493827160493], [1.73815962E12, 1404.3888888888885], [1.73816406E12, 1673.7142857142853], [1.7381586E12, 362.2958963282938], [1.73816184E12, 1688.8095238095236], [1.73816082E12, 1474.425], [1.73816286E12, 1869.2795698924726], [1.73816508E12, 1913.5161290322578], [1.73816322E12, 1961.7555555555552], [1.73816544E12, 2173.3209876543215], [1.73815758E12, 247.79846153846154], [1.7381598E12, 1281.123188405797], [1.73816646E12, 2259.230769230768], [1.73815878E12, 437.2279792746118], [1.738161E12, 1603.3240740740737], [1.73816202E12, 1668.2857142857133], [1.73816424E12, 1821.5416666666667], [1.73816526E12, 2079.940476190477], [1.73815776E12, 252.6506955177743], [1.73816208E12, 1700.0380952380954], [1.73815866E12, 359.5064377682403], [1.73816088E12, 1584.1339285714291], [1.7381631E12, 1891.1827956989248], [1.73816532E12, 2017.1444444444444], [1.73815764E12, 241.2585949177878], [1.73815986E12, 1263.666666666667], [1.7381619E12, 1736.1372549019602], [1.73816412E12, 1711.4952380952382], [1.73816634E12, 2148.7976190476193], [1.73815884E12, 505.2721893491123], [1.73816226E12, 1658.8285714285712], [1.73816448E12, 1838.2525252525259], [1.73816106E12, 1674.212962962963], [1.7381655E12, 2225.345679012346], [1.73816328E12, 1830.4949494949487], [1.73816652E12, 2376.9199999999996], [1.73815782E12, 249.4525993883792], [1.73816004E12, 1412.8211382113825], [1.7381643E12, 1857.3541666666672], [1.73815932E12, 911.0989583333336], [1.73816274E12, 1778.8888888888894], [1.73816496E12, 1961.8709677419351], [1.73816598E12, 2188.37037037037], [1.73815728E12, 227.3050847457628], [1.73816052E12, 1446.6829268292684], [1.7381583E12, 310.57934990439765], [1.73816154E12, 1599.9909909909913], [1.73816376E12, 1723.2058823529417], [1.73816478E12, 1937.8602150537629], [1.73816514E12, 1998.3563218390805], [1.7381595E12, 1375.1349206349207], [1.73815848E12, 318.55769230769243], [1.73816292E12, 1769.421568627451], [1.7381607E12, 1485.8907563025205], [1.73816394E12, 1767.969696969697], [1.73816172E12, 1635.8148148148143], [1.73816616E12, 2267.192307692308], [1.73815746E12, 248.14916286149153], [1.73815968E12, 1365.2248062015506]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7381667E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73815722E12, "maxY": 7137.727272727272, "series": [{"data": [[1.73815836E12, 0.0], [1.73816178E12, 0.0], [1.738164E12, 0.0], [1.73816058E12, 0.0], [1.73816502E12, 0.0], [1.7381628E12, 0.0], [1.73816604E12, 0.0], [1.73815734E12, 0.0], [1.73815956E12, 0.0], [1.73816382E12, 0.0], [1.73816418E12, 0.0], [1.73815854E12, 0.0], [1.73816076E12, 0.0], [1.73815752E12, 0.0], [1.73816196E12, 0.0], [1.7381664E12, 0.0], [1.73815974E12, 0.0], [1.73816298E12, 0.0], [1.7381652E12, 0.0], [1.73816622E12, 0.0], [1.73815872E12, 0.0], [1.73816466E12, 0.0], [1.73815902E12, 0.0], [1.73816124E12, 0.0], [1.738158E12, 0.0], [1.73816244E12, 0.0], [1.73816022E12, 0.0], [1.73816346E12, 0.0], [1.73816568E12, 0.0], [1.7381667E12, 0.0], [1.7381592E12, 0.0], [1.73816142E12, 0.0], [1.7381616E12, 0.0], [1.73816262E12, 0.0], [1.73816484E12, 0.0], [1.73815818E12, 0.0], [1.7381604E12, 0.0], [1.73815938E12, 0.0], [1.73816364E12, 0.0], [1.73816586E12, 0.0], [1.7381637E12, 0.0], [1.73815806E12, 0.0], [1.73816028E12, 0.0], [1.73816592E12, 0.0], [1.73815926E12, 0.0], [1.73816148E12, 0.0], [1.73816472E12, 0.0], [1.7381625E12, 0.0], [1.73816574E12, 0.0], [1.73815824E12, 0.0], [1.73815722E12, 0.0], [1.73816046E12, 0.0], [1.73815944E12, 0.0], [1.73816166E12, 0.0], [1.73816388E12, 0.0], [1.7381661E12, 0.0], [1.7381649E12, 0.0], [1.73816268E12, 0.0], [1.73815842E12, 0.0], [1.73816064E12, 0.0], [1.73816094E12, 0.0], [1.7381577E12, 0.0], [1.73815992E12, 0.0], [1.73816214E12, 0.0], [1.73816436E12, 0.0], [1.73816658E12, 0.0], [1.73816538E12, 0.0], [1.73816316E12, 0.0], [1.7381589E12, 0.0], [1.73816112E12, 0.0], [1.73816352E12, 0.0], [1.73815788E12, 0.0], [1.7381601E12, 0.0], [1.73816454E12, 0.0], [1.73815908E12, 0.0], [1.73816232E12, 0.0], [1.7381613E12, 0.0], [1.73816334E12, 0.0], [1.73816556E12, 0.0], [1.73816562E12, 0.0], [1.73815998E12, 0.0], [1.73815896E12, 0.0], [1.7381634E12, 0.0], [1.73816118E12, 0.0], [1.73816442E12, 0.0], [1.7381622E12, 0.0], [1.73816664E12, 0.0], [1.73815794E12, 0.0], [1.73816016E12, 0.0], [1.73816256E12, 0.0], [1.7381658E12, 0.0], [1.73815914E12, 0.0], [1.73816136E12, 0.0], [1.73816358E12, 0.0], [1.73815812E12, 0.0], [1.73816034E12, 0.0], [1.73816238E12, 0.0], [1.7381646E12, 0.0], [1.73816304E12, 0.0], [1.7381574E12, 0.0], [1.73816628E12, 0.0], [1.73815962E12, 0.0], [1.73816406E12, 0.0], [1.7381586E12, 0.0], [1.73816184E12, 0.0], [1.73816082E12, 0.0], [1.73816286E12, 0.0], [1.73816508E12, 0.0], [1.73816322E12, 0.0], [1.73816544E12, 0.0], [1.73815758E12, 0.0], [1.7381598E12, 0.0], [1.73816646E12, 0.0], [1.73815878E12, 0.0], [1.738161E12, 0.0], [1.73816202E12, 0.0], [1.73816424E12, 0.0], [1.73816526E12, 0.0], [1.73815776E12, 0.0], [1.73816208E12, 0.0], [1.73815866E12, 0.0], [1.73816088E12, 0.0], [1.7381631E12, 0.0], [1.73816532E12, 0.0], [1.73815764E12, 0.0], [1.73815986E12, 0.0], [1.7381619E12, 0.0], [1.73816412E12, 0.0], [1.73816634E12, 0.0], [1.73815884E12, 0.0], [1.73816226E12, 0.0], [1.73816448E12, 0.0], [1.73816106E12, 0.0], [1.7381655E12, 0.0], [1.73816328E12, 0.0], [1.73816652E12, 0.0], [1.73815782E12, 0.0], [1.73816004E12, 0.0], [1.7381643E12, 0.0], [1.73815932E12, 0.0], [1.73816274E12, 0.0], [1.73816496E12, 0.0], [1.73816598E12, 0.0], [1.73815728E12, 0.0], [1.73816052E12, 0.0], [1.7381583E12, 0.0], [1.73816154E12, 0.0], [1.73816376E12, 0.0], [1.73816478E12, 0.0], [1.73816514E12, 0.0], [1.7381595E12, 0.0], [1.73815848E12, 0.0], [1.73816292E12, 0.0], [1.7381607E12, 0.0], [1.73816394E12, 0.0], [1.73816172E12, 0.0], [1.73816616E12, 0.0], [1.73815746E12, 0.0], [1.73815968E12, 0.0]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[1.73815836E12, 299.3894927536233], [1.73816178E12, 1643.7870370370374], [1.738164E12, 1713.438095238095], [1.73816058E12, 1541.78947368421], [1.73816502E12, 1966.211111111111], [1.7381628E12, 2037.1136363636358], [1.73816604E12, 2092.609195402299], [1.73815734E12, 227.90409026798335], [1.73815956E12, 1349.9545454545453], [1.73816382E12, 1754.4215686274515], [1.73816418E12, 1744.529411764706], [1.73815854E12, 349.88679245283026], [1.73816076E12, 1556.1578947368423], [1.73815752E12, 250.92879256965958], [1.73816196E12, 1688.6380952380953], [1.7381664E12, 2451.7361111111113], [1.73815974E12, 1278.1956521739135], [1.73816298E12, 1817.8125], [1.7381652E12, 2007.2666666666664], [1.73816622E12, 2265.730769230769], [1.73815872E12, 410.17475728155324], [1.73816466E12, 1819.4444444444446], [1.73815902E12, 646.7041198501869], [1.73816124E12, 1669.8857142857141], [1.738158E12, 272.2545454545452], [1.73816244E12, 1752.411764705882], [1.73816022E12, 1360.953488372092], [1.73816346E12, 1755.1717171717175], [1.73816568E12, 2089.7976190476197], [1.7381667E12, 2242.0285714285715], [1.7381592E12, 7137.727272727272], [1.73816142E12, 1541.4824561403507], [1.7381616E12, 1520.8717948717951], [1.73816262E12, 1887.279569892473], [1.73816484E12, 1843.2187500000002], [1.73815818E12, 285.2987910189984], [1.7381604E12, 1448.0081300813006], [1.73815938E12, 1047.6227544910175], [1.73816364E12, 1646.6018518518513], [1.73816586E12, 2395.9861111111113], [1.7381637E12, 1810.7604166666656], [1.73815806E12, 267.8870703764323], [1.73816028E12, 1320.0592592592586], [1.73816592E12, 2236.9629629629626], [1.73815926E12, 915.0691244239634], [1.73816148E12, 1556.535087719298], [1.73816472E12, 1882.0645161290322], [1.7381625E12, 1699.1568627450981], [1.73816574E12, 2137.9999999999995], [1.73815824E12, 280.26440677966076], [1.73815722E12, 229.9175824175823], [1.73816046E12, 1464.1311475409832], [1.73815944E12, 1322.162962962963], [1.73816166E12, 1593.756756756757], [1.73816388E12, 1662.453703703704], [1.7381661E12, 2082.5476190476193], [1.7381649E12, 1925.7333333333338], [1.73816268E12, 1758.911764705883], [1.73815842E12, 299.0433996383364], [1.73816064E12, 1465.8264462809918], [1.73816094E12, 1455.1300813008133], [1.7381577E12, 251.17719568567026], [1.73815992E12, 1264.4202898550723], [1.73816214E12, 1694.7619047619046], [1.73816436E12, 1811.2929292929293], [1.73816658E12, 2388.613333333333], [1.73816538E12, 2103.750000000001], [1.73816316E12, 1975.7], [1.7381589E12, 564.0163934426229], [1.73816112E12, 1732.4999999999998], [1.73816352E12, 1742.6274509803923], [1.73815788E12, 262.28525641025607], [1.7381601E12, 1535.3504273504275], [1.73816454E12, 1841.333333333334], [1.73815908E12, 722.3539094650208], [1.73816232E12, 1655.416666666667], [1.7381613E12, 1572.912280701755], [1.73816334E12, 1748.9117647058822], [1.73816556E12, 2159.8888888888887], [1.73816562E12, 2129.071428571429], [1.73815998E12, 1460.0406504065045], [1.73815896E12, 656.4090909090908], [1.7381634E12, 1737.3235294117646], [1.73816118E12, 1685.0666666666662], [1.73816442E12, 1925.1333333333337], [1.7381622E12, 1761.43137254902], [1.73816664E12, 2377.710144927536], [1.73815794E12, 260.94863563402873], [1.73816016E12, 1457.416666666666], [1.73816256E12, 1879.2916666666665], [1.7381658E12, 2145.5833333333335], [1.73815914E12, 845.4925373134325], [1.73816136E12, 1625.4722222222226], [1.73816358E12, 1659.5277777777774], [1.73815812E12, 273.7990033222588], [1.73816034E12, 1449.8677685950415], [1.73816238E12, 1684.7142857142858], [1.7381646E12, 1946.1555555555553], [1.73816304E12, 1870.833333333333], [1.7381574E12, 244.6542056074768], [1.73816628E12, 2197.493827160493], [1.73815962E12, 1404.3809523809523], [1.73816406E12, 1673.704761904762], [1.7381586E12, 362.28077753779695], [1.73816184E12, 1688.7809523809526], [1.73816082E12, 1474.416666666667], [1.73816286E12, 1869.2580645161281], [1.73816508E12, 1913.5161290322578], [1.73816322E12, 1961.7444444444438], [1.73816544E12, 2173.3209876543215], [1.73815758E12, 247.77999999999983], [1.7381598E12, 1281.1159420289853], [1.73816646E12, 2259.217948717948], [1.73815878E12, 437.2202072538861], [1.738161E12, 1603.3148148148148], [1.73816202E12, 1668.2857142857133], [1.73816424E12, 1821.5208333333333], [1.73816526E12, 2079.940476190477], [1.73815776E12, 252.63369397217926], [1.73816208E12, 1700.0285714285712], [1.73815866E12, 359.50214592274654], [1.73816088E12, 1584.1339285714291], [1.7381631E12, 1891.1397849462362], [1.73816532E12, 2017.133333333333], [1.73815764E12, 241.237668161435], [1.73815986E12, 1263.6595744680853], [1.7381619E12, 1736.1372549019602], [1.73816412E12, 1711.4761904761915], [1.73816634E12, 2148.7857142857147], [1.73815884E12, 505.2692307692309], [1.73816226E12, 1658.8095238095232], [1.73816448E12, 1838.2525252525259], [1.73816106E12, 1674.1944444444443], [1.7381655E12, 2225.333333333333], [1.73816328E12, 1830.484848484848], [1.73816652E12, 2376.906666666665], [1.73815782E12, 249.4342507645257], [1.73816004E12, 1412.8130081300817], [1.7381643E12, 1857.3229166666665], [1.73815932E12, 911.0937500000002], [1.73816274E12, 1778.8787878787884], [1.73816496E12, 1961.8387096774195], [1.73816598E12, 2188.358024691359], [1.73815728E12, 227.26129943502812], [1.73816052E12, 1446.666666666667], [1.7381583E12, 310.5717017208416], [1.73816154E12, 1599.972972972972], [1.73816376E12, 1723.1666666666679], [1.73816478E12, 1937.8602150537629], [1.73816514E12, 1998.3448275862067], [1.7381595E12, 1375.1349206349207], [1.73815848E12, 318.5307692307694], [1.73816292E12, 1769.4019607843145], [1.7381607E12, 1485.8739495798322], [1.73816394E12, 1767.969696969697], [1.73816172E12, 1635.8055555555557], [1.73816616E12, 2267.192307692308], [1.73815746E12, 248.11719939117197], [1.73815968E12, 1365.2248062015506]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7381667E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73815722E12, "maxY": 12.478021978021973, "series": [{"data": [[1.73815836E12, 0.0], [1.73816178E12, 0.0], [1.738164E12, 0.0], [1.73816058E12, 0.0], [1.73816502E12, 0.0], [1.7381628E12, 0.0], [1.73816604E12, 0.0], [1.73815734E12, 0.0], [1.73815956E12, 0.0], [1.73816382E12, 0.0], [1.73816418E12, 0.0], [1.73815854E12, 0.0], [1.73816076E12, 0.0], [1.73815752E12, 0.0], [1.73816196E12, 0.0], [1.7381664E12, 0.0], [1.73815974E12, 0.0], [1.73816298E12, 0.0], [1.7381652E12, 0.0], [1.73816622E12, 0.0], [1.73815872E12, 0.0], [1.73816466E12, 0.0], [1.73815902E12, 0.0], [1.73816124E12, 0.0], [1.738158E12, 0.0], [1.73816244E12, 0.0], [1.73816022E12, 0.0], [1.73816346E12, 0.0], [1.73816568E12, 0.0], [1.7381667E12, 0.0], [1.7381592E12, 0.0], [1.73816142E12, 0.0], [1.7381616E12, 0.0], [1.73816262E12, 0.0], [1.73816484E12, 0.0], [1.73815818E12, 0.0], [1.7381604E12, 0.0], [1.73815938E12, 0.0], [1.73816364E12, 0.0], [1.73816586E12, 0.0], [1.7381637E12, 0.0], [1.73815806E12, 0.0], [1.73816028E12, 0.0], [1.73816592E12, 0.0], [1.73815926E12, 0.0], [1.73816148E12, 0.0], [1.73816472E12, 0.0], [1.7381625E12, 0.0], [1.73816574E12, 0.0], [1.73815824E12, 0.0], [1.73815722E12, 0.0], [1.73816046E12, 0.0], [1.73815944E12, 0.0], [1.73816166E12, 0.0], [1.73816388E12, 0.0], [1.7381661E12, 0.0], [1.7381649E12, 0.0], [1.73816268E12, 0.0], [1.73815842E12, 0.0], [1.73816064E12, 0.0], [1.73816094E12, 0.0], [1.7381577E12, 0.0], [1.73815992E12, 0.0], [1.73816214E12, 0.0], [1.73816436E12, 0.0], [1.73816658E12, 0.0], [1.73816538E12, 0.0], [1.73816316E12, 0.0], [1.7381589E12, 0.0], [1.73816112E12, 0.0], [1.73816352E12, 0.0], [1.73815788E12, 0.0], [1.7381601E12, 0.0], [1.73816454E12, 0.0], [1.73815908E12, 0.0], [1.73816232E12, 0.0], [1.7381613E12, 0.0], [1.73816334E12, 0.0], [1.73816556E12, 0.0], [1.73816562E12, 0.0], [1.73815998E12, 0.0], [1.73815896E12, 0.0], [1.7381634E12, 0.0], [1.73816118E12, 0.0], [1.73816442E12, 0.0], [1.7381622E12, 0.0], [1.73816664E12, 0.0], [1.73815794E12, 0.0], [1.73816016E12, 0.0], [1.73816256E12, 0.0], [1.7381658E12, 0.0], [1.73815914E12, 0.0], [1.73816136E12, 0.0], [1.73816358E12, 0.0], [1.73815812E12, 0.0], [1.73816034E12, 0.0], [1.73816238E12, 0.0], [1.7381646E12, 0.0], [1.73816304E12, 0.0], [1.7381574E12, 0.0], [1.73816628E12, 0.0], [1.73815962E12, 0.0], [1.73816406E12, 0.0], [1.7381586E12, 0.0], [1.73816184E12, 0.0], [1.73816082E12, 0.0], [1.73816286E12, 0.0], [1.73816508E12, 0.0], [1.73816322E12, 0.0], [1.73816544E12, 0.0], [1.73815758E12, 0.0], [1.7381598E12, 0.0], [1.73816646E12, 0.0], [1.73815878E12, 0.0], [1.738161E12, 0.0], [1.73816202E12, 0.0], [1.73816424E12, 0.0], [1.73816526E12, 0.0], [1.73815776E12, 0.0], [1.73816208E12, 0.0], [1.73815866E12, 0.0], [1.73816088E12, 0.0], [1.7381631E12, 0.0], [1.73816532E12, 0.0], [1.73815764E12, 0.0], [1.73815986E12, 0.0], [1.7381619E12, 0.0], [1.73816412E12, 0.0], [1.73816634E12, 0.0], [1.73815884E12, 0.0], [1.73816226E12, 0.0], [1.73816448E12, 0.0], [1.73816106E12, 0.0], [1.7381655E12, 0.0], [1.73816328E12, 0.0], [1.73816652E12, 0.0], [1.73815782E12, 0.0], [1.73816004E12, 0.0], [1.7381643E12, 0.0], [1.73815932E12, 0.0], [1.73816274E12, 0.0], [1.73816496E12, 0.0], [1.73816598E12, 0.0], [1.73815728E12, 0.0], [1.73816052E12, 0.0], [1.7381583E12, 0.0], [1.73816154E12, 0.0], [1.73816376E12, 0.0], [1.73816478E12, 0.0], [1.73816514E12, 0.0], [1.7381595E12, 0.0], [1.73815848E12, 0.0], [1.73816292E12, 0.0], [1.7381607E12, 0.0], [1.73816394E12, 0.0], [1.73816172E12, 0.0], [1.73816616E12, 0.0], [1.73815746E12, 0.0], [1.73815968E12, 0.0]], "isOverall": false, "label": "OS Process Sampler", "isController": false}, {"data": [[1.73815836E12, 0.06521739130434782], [1.73816178E12, 0.25000000000000006], [1.738164E12, 0.13333333333333333], [1.73816058E12, 0.27192982456140324], [1.73816502E12, 0.2666666666666668], [1.7381628E12, 0.21590909090909088], [1.73816604E12, 0.16091954022988506], [1.73815734E12, 0.06205923836389287], [1.73815956E12, 0.2575757575757575], [1.73816382E12, 0.1666666666666667], [1.73816418E12, 0.14705882352941177], [1.73815854E12, 0.08385744234800838], [1.73816076E12, 0.1403508771929825], [1.73815752E12, 0.07585139318885445], [1.73816196E12, 0.2285714285714286], [1.7381664E12, 0.3194444444444446], [1.73815974E12, 0.13043478260869565], [1.73816298E12, 0.30208333333333337], [1.7381652E12, 0.22222222222222215], [1.73816622E12, 0.20512820512820518], [1.73815872E12, 0.048543689320388356], [1.73816466E12, 0.19191919191919196], [1.73815902E12, 0.11235955056179775], [1.73816124E12, 0.16190476190476194], [1.738158E12, 0.06280991735537185], [1.73816244E12, 0.22549019607843138], [1.73816022E12, 0.17054263565891478], [1.73816346E12, 0.2424242424242424], [1.73816568E12, 0.2619047619047619], [1.7381667E12, 0.17142857142857146], [1.7381592E12, 0.0], [1.73816142E12, 0.20175438596491233], [1.7381616E12, 0.1709401709401709], [1.73816262E12, 0.3010752688172043], [1.73816484E12, 0.14583333333333331], [1.73815818E12, 0.056994818652849756], [1.7381604E12, 0.2276422764227642], [1.73815938E12, 0.20359281437125745], [1.73816364E12, 0.19444444444444448], [1.73816586E12, 0.2083333333333334], [1.7381637E12, 0.4270833333333334], [1.73815806E12, 0.06055646481178392], [1.73816028E12, 0.13333333333333344], [1.73816592E12, 0.17283950617283947], [1.73815926E12, 0.17972350230414738], [1.73816148E12, 0.22807017543859642], [1.73816472E12, 0.1612903225806452], [1.7381625E12, 0.20588235294117652], [1.73816574E12, 0.3095238095238096], [1.73815824E12, 0.07627118644067793], [1.73815722E12, 12.478021978021973], [1.73816046E12, 0.13934426229508193], [1.73815944E12, 0.11851851851851852], [1.73816166E12, 0.13513513513513525], [1.73816388E12, 0.1481481481481481], [1.7381661E12, 0.32142857142857134], [1.7381649E12, 0.24444444444444444], [1.73816268E12, 0.14705882352941183], [1.73815842E12, 0.05424954792043397], [1.73816064E12, 0.20661157024793386], [1.73816094E12, 0.17886178861788626], [1.7381577E12, 0.06163328197226503], [1.73815992E12, 0.036231884057970995], [1.73816214E12, 0.1523809523809524], [1.73816436E12, 0.19191919191919193], [1.73816658E12, 0.21333333333333343], [1.73816538E12, 0.24999999999999986], [1.73816316E12, 0.23333333333333348], [1.7381589E12, 0.08852459016393445], [1.73816112E12, 0.2843137254901959], [1.73816352E12, 0.1764705882352941], [1.73815788E12, 0.054487179487179474], [1.7381601E12, 0.19658119658119674], [1.73816454E12, 0.16666666666666674], [1.73815908E12, 0.10288065843621398], [1.73816232E12, 0.2592592592592593], [1.7381613E12, 0.16666666666666663], [1.73816334E12, 0.2156862745098039], [1.73816556E12, 0.30864197530864185], [1.73816562E12, 0.1785714285714286], [1.73815998E12, 0.20325203252032517], [1.73815896E12, 0.1022727272727273], [1.7381634E12, 0.1470588235294118], [1.73816118E12, 0.15238095238095242], [1.73816442E12, 0.07777777777777778], [1.7381622E12, 0.284313725490196], [1.73816664E12, 0.17391304347826095], [1.73815794E12, 0.05136436597110753], [1.73816016E12, 0.22499999999999995], [1.73816256E12, 0.17708333333333337], [1.7381658E12, 0.1428571428571429], [1.73815914E12, 0.1144278606965174], [1.73816136E12, 0.3981481481481484], [1.73816358E12, 0.18518518518518517], [1.73815812E12, 0.049833887043189376], [1.73816034E12, 0.19008264462809915], [1.73816238E12, 0.1714285714285714], [1.7381646E12, 0.18888888888888886], [1.73816304E12, 0.27083333333333337], [1.7381574E12, 0.06542056074766359], [1.73816628E12, 0.20987654320987661], [1.73815962E12, 0.1507936507936508], [1.73816406E12, 0.1714285714285714], [1.7381586E12, 0.07559395248380131], [1.73816184E12, 0.15238095238095248], [1.73816082E12, 0.15000000000000005], [1.73816286E12, 0.16129032258064513], [1.73816508E12, 0.20430107526881722], [1.73816322E12, 0.4], [1.73816544E12, 0.17283950617283947], [1.73815758E12, 0.04923076923076922], [1.7381598E12, 0.21739130434782608], [1.73816646E12, 0.282051282051282], [1.73815878E12, 0.06217616580310882], [1.738161E12, 0.22222222222222213], [1.73816202E12, 0.15238095238095245], [1.73816424E12, 0.14583333333333337], [1.73816526E12, 0.6428571428571425], [1.73815776E12, 0.06336939721792895], [1.73816208E12, 0.27619047619047626], [1.73815866E12, 0.055793991416309], [1.73816088E12, 0.18750000000000014], [1.7381631E12, 0.1397849462365591], [1.73816532E12, 0.17777777777777776], [1.73815764E12, 0.04035874439461882], [1.73815986E12, 0.10638297872340424], [1.7381619E12, 0.2745098039215686], [1.73816412E12, 0.15238095238095237], [1.73816634E12, 0.19047619047619058], [1.73815884E12, 0.12426035502958578], [1.73816226E12, 0.1523809523809524], [1.73816448E12, 0.18181818181818188], [1.73816106E12, 0.1944444444444446], [1.7381655E12, 0.2345679012345679], [1.73816328E12, 0.19191919191919193], [1.73816652E12, 0.33333333333333337], [1.73815782E12, 0.04434250764525998], [1.73816004E12, 0.1951219512195122], [1.7381643E12, 0.18750000000000003], [1.73815932E12, 0.13541666666666666], [1.73816274E12, 0.20202020202020202], [1.73816496E12, 0.21505376344086016], [1.73816598E12, 0.13580246913580257], [1.73815728E12, 0.08474576271186451], [1.73816052E12, 0.1707317073170734], [1.7381583E12, 0.061185468451242876], [1.73816154E12, 0.19819819819819823], [1.73816376E12, 0.19607843137254902], [1.73816478E12, 0.18279569892473116], [1.73816514E12, 0.18390804597701155], [1.7381595E12, 0.18253968253968256], [1.73815848E12, 0.061538461538461584], [1.73816292E12, 0.16666666666666666], [1.7381607E12, 0.16806722689075618], [1.73816394E12, 0.2929292929292929], [1.73816172E12, 0.14814814814814814], [1.73816616E12, 0.19230769230769235], [1.73815746E12, 0.053272450532724516], [1.73815968E12, 0.14728682170542637]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7381667E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.73815722E12, "maxY": 15054.0, "series": [{"data": [[1.73815836E12, 1161.0], [1.73816178E12, 2014.0], [1.738164E12, 1962.0], [1.73816058E12, 1971.0], [1.73816502E12, 2590.0], [1.7381628E12, 3260.0], [1.73816604E12, 2568.0], [1.73815734E12, 2116.0], [1.73815956E12, 1817.0], [1.73816382E12, 2061.0], [1.73816418E12, 2075.0], [1.73815854E12, 1945.0], [1.73816076E12, 2475.0], [1.73815752E12, 2398.0], [1.73816196E12, 2082.0], [1.7381664E12, 3552.0], [1.73815974E12, 1645.0], [1.73816298E12, 2239.0], [1.7381652E12, 2477.0], [1.73816622E12, 2640.0], [1.73815872E12, 961.0], [1.73816466E12, 2340.0], [1.73815902E12, 980.0], [1.73816124E12, 1956.0], [1.738158E12, 1275.0], [1.73816244E12, 2027.0], [1.73816022E12, 2306.0], [1.73816346E12, 2212.0], [1.73816568E12, 2386.0], [1.7381667E12, 2935.0], [1.7381592E12, 11097.0], [1.73816142E12, 2154.0], [1.7381616E12, 1759.0], [1.73816262E12, 2472.0], [1.73816484E12, 2109.0], [1.73815818E12, 1728.0], [1.7381604E12, 2000.0], [1.73815938E12, 1774.0], [1.73816364E12, 1831.0], [1.73816586E12, 2918.0], [1.7381637E12, 2530.0], [1.73815806E12, 1430.0], [1.73816028E12, 1547.0], [1.73816592E12, 2733.0], [1.73815926E12, 15054.0], [1.73816148E12, 1791.0], [1.73816472E12, 2343.0], [1.7381625E12, 2713.0], [1.73816574E12, 2471.0], [1.73815824E12, 1335.0], [1.73815722E12, 1013.0], [1.73816046E12, 2039.0], [1.73815944E12, 2246.0], [1.73816166E12, 2066.0], [1.73816388E12, 1968.0], [1.7381661E12, 2539.0], [1.7381649E12, 2403.0], [1.73816268E12, 2169.0], [1.73815842E12, 1492.0], [1.73816064E12, 1950.0], [1.73816094E12, 1676.0], [1.7381577E12, 1886.0], [1.73815992E12, 1913.0], [1.73816214E12, 2139.0], [1.73816436E12, 2054.0], [1.73816658E12, 2961.0], [1.73816538E12, 2425.0], [1.73816316E12, 2816.0], [1.7381589E12, 1003.0], [1.73816112E12, 2490.0], [1.73816352E12, 2123.0], [1.73815788E12, 2129.0], [1.7381601E12, 3554.0], [1.73816454E12, 2181.0], [1.73815908E12, 1174.0], [1.73816232E12, 2005.0], [1.7381613E12, 1898.0], [1.73816334E12, 2008.0], [1.73816556E12, 2476.0], [1.73816562E12, 2628.0], [1.73815998E12, 1822.0], [1.73815896E12, 1505.0], [1.7381634E12, 2090.0], [1.73816118E12, 2065.0], [1.73816442E12, 2435.0], [1.7381622E12, 2454.0], [1.73816664E12, 2941.0], [1.73815794E12, 1591.0], [1.73816016E12, 1747.0], [1.73816256E12, 2266.0], [1.7381658E12, 2393.0], [1.73815914E12, 1921.0], [1.73816136E12, 1955.0], [1.73816358E12, 2069.0], [1.73815812E12, 1508.0], [1.73816034E12, 1965.0], [1.73816238E12, 2080.0], [1.7381646E12, 3039.0], [1.73816304E12, 2436.0], [1.7381574E12, 1957.0], [1.73816628E12, 2676.0], [1.73815962E12, 2192.0], [1.73816406E12, 1911.0], [1.7381586E12, 2089.0], [1.73816184E12, 2172.0], [1.73816082E12, 1701.0], [1.73816286E12, 2485.0], [1.73816508E12, 2277.0], [1.73816322E12, 2712.0], [1.73816544E12, 2617.0], [1.73815758E12, 1725.0], [1.7381598E12, 1712.0], [1.73816646E12, 2823.0], [1.73815878E12, 873.0], [1.738161E12, 3006.0], [1.73816202E12, 1907.0], [1.73816424E12, 2149.0], [1.73816526E12, 2394.0], [1.73815776E12, 1865.0], [1.73816208E12, 1917.0], [1.73815866E12, 930.0], [1.73816088E12, 2482.0], [1.7381631E12, 2708.0], [1.73816532E12, 2615.0], [1.73815764E12, 1682.0], [1.73815986E12, 1546.0], [1.7381619E12, 2564.0], [1.73816412E12, 1928.0], [1.73816634E12, 2621.0], [1.73815884E12, 1284.0], [1.73816226E12, 1861.0], [1.73816448E12, 2065.0], [1.73816106E12, 2157.0], [1.7381655E12, 3004.0], [1.73816328E12, 2274.0], [1.73816652E12, 2810.0], [1.73815782E12, 1710.0], [1.73816004E12, 1686.0], [1.7381643E12, 2205.0], [1.73815932E12, 1673.0], [1.73816274E12, 2592.0], [1.73816496E12, 2430.0], [1.73816598E12, 2721.0], [1.73815728E12, 1648.0], [1.73816052E12, 1888.0], [1.7381583E12, 1816.0], [1.73816154E12, 1925.0], [1.73816376E12, 2138.0], [1.73816478E12, 2498.0], [1.73816514E12, 2420.0], [1.7381595E12, 2030.0], [1.73815848E12, 949.0], [1.73816292E12, 2078.0], [1.7381607E12, 2020.0], [1.73816394E12, 2080.0], [1.73816172E12, 1975.0], [1.73816616E12, 2878.0], [1.73815746E12, 1518.0], [1.73815968E12, 1677.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73815836E12, 290.0], [1.73816178E12, 1751.7], [1.738164E12, 1819.6], [1.73816058E12, 1675.0], [1.73816502E12, 2101.4], [1.7381628E12, 2260.6], [1.73816604E12, 2278.0], [1.73815734E12, 219.0], [1.73815956E12, 1489.0], [1.73816382E12, 1845.0], [1.73816418E12, 1853.0], [1.73815854E12, 428.0], [1.73816076E12, 1655.2], [1.73815752E12, 253.79999999999995], [1.73816196E12, 1785.7], [1.7381664E12, 2650.0], [1.73815974E12, 1381.0], [1.73816298E12, 1997.8000000000002], [1.7381652E12, 2086.0], [1.73816622E12, 2462.6], [1.73815872E12, 544.5], [1.73816466E12, 1903.3], [1.73815902E12, 725.5], [1.73816124E12, 1780.3], [1.738158E12, 261.0], [1.73816244E12, 1924.0], [1.73816022E12, 1412.4], [1.73816346E12, 1848.4], [1.73816568E12, 2298.6], [1.7381667E12, 2449.2], [1.7381592E12, 8859.0], [1.73816142E12, 1624.7], [1.7381616E12, 1608.5], [1.73816262E12, 2062.5000000000005], [1.73816484E12, 1924.8000000000002], [1.73815818E12, 263.10000000000014], [1.7381604E12, 1542.1000000000001], [1.73815938E12, 1341.0], [1.73816364E12, 1733.6], [1.73816586E12, 2565.5], [1.7381637E12, 1946.7000000000003], [1.73815806E12, 260.0], [1.73816028E12, 1410.7], [1.73816592E12, 2439.8], [1.73815926E12, 814.0], [1.73816148E12, 1624.5], [1.73816472E12, 1976.3], [1.7381625E12, 1749.5], [1.73816574E12, 2333.4], [1.73815824E12, 267.0], [1.73815722E12, 228.0], [1.73816046E12, 1583.0], [1.73815944E12, 1400.7], [1.73816166E12, 1707.9], [1.73816388E12, 1742.3], [1.7381661E12, 2202.6], [1.7381649E12, 1988.4], [1.73816268E12, 1856.0], [1.73815842E12, 320.60000000000014], [1.73816064E12, 1538.5], [1.73816094E12, 1544.0], [1.7381577E12, 239.0], [1.73815992E12, 1375.6], [1.73816214E12, 1783.4], [1.73816436E12, 1898.0], [1.73816658E12, 2470.9], [1.73816538E12, 2226.2], [1.73816316E12, 2131.9], [1.7381589E12, 673.0], [1.73816112E12, 1909.0], [1.73816352E12, 1845.5], [1.73815788E12, 254.0], [1.7381601E12, 1535.0], [1.73816454E12, 1967.7], [1.73815908E12, 823.2], [1.73816232E12, 1732.0], [1.7381613E12, 1693.6], [1.73816334E12, 1880.5], [1.73816556E12, 2322.7], [1.73816562E12, 2244.5], [1.73815998E12, 1547.5], [1.73815896E12, 736.1], [1.7381634E12, 1863.5], [1.73816118E12, 1790.6], [1.73816442E12, 1994.8], [1.7381622E12, 1866.0], [1.73816664E12, 2512.4], [1.73815794E12, 250.29999999999995], [1.73816016E12, 1535.0], [1.73816256E12, 2027.1000000000001], [1.7381658E12, 2271.1], [1.73815914E12, 882.4000000000001], [1.73816136E12, 1733.5], [1.73816358E12, 1737.1000000000001], [1.73815812E12, 258.5], [1.73816034E12, 1544.4], [1.73816238E12, 1768.6], [1.7381646E12, 2058.3], [1.73816304E12, 1969.7], [1.7381574E12, 232.0], [1.73816628E12, 2333.7], [1.73815962E12, 1486.8000000000002], [1.73816406E12, 1786.9], [1.7381586E12, 434.60000000000014], [1.73816184E12, 1796.9], [1.73816082E12, 1567.9], [1.73816286E12, 1993.3], [1.73816508E12, 1987.9], [1.73816322E12, 2059.0], [1.73816544E12, 2240.8], [1.73815758E12, 238.0], [1.7381598E12, 1358.3], [1.73816646E12, 2373.3], [1.73815878E12, 552.8000000000001], [1.738161E12, 1714.3], [1.73816202E12, 1735.8], [1.73816424E12, 1865.9], [1.73816526E12, 2260.5], [1.73815776E12, 243.0], [1.73816208E12, 1794.8], [1.73815866E12, 474.80000000000007], [1.73816088E12, 1672.5], [1.7381631E12, 2036.6000000000001], [1.73816532E12, 2062.3], [1.73815764E12, 238.10000000000014], [1.73815986E12, 1323.0000000000002], [1.7381619E12, 1907.5], [1.73816412E12, 1801.5], [1.73816634E12, 2285.0], [1.73815884E12, 623.3000000000001], [1.73816226E12, 1731.8], [1.73816448E12, 1941.4], [1.73816106E12, 1843.0], [1.7381655E12, 2420.0], [1.73816328E12, 2016.1], [1.73816652E12, 2568.3], [1.73815782E12, 239.10000000000014], [1.73816004E12, 1478.9], [1.7381643E12, 1965.4], [1.73815932E12, 1021.5], [1.73816274E12, 1914.5], [1.73816496E12, 2044.6000000000004], [1.73816598E12, 2364.4], [1.73815728E12, 221.0], [1.73816052E12, 1549.9], [1.7381583E12, 305.0], [1.73816154E12, 1741.7], [1.73816376E12, 1822.5], [1.73816478E12, 2035.0], [1.73816514E12, 2130.0], [1.7381595E12, 1480.4], [1.73815848E12, 398.0], [1.73816292E12, 1823.5], [1.7381607E12, 1586.1], [1.73816394E12, 1865.5], [1.73816172E12, 1713.4000000000003], [1.73816616E12, 2398.3], [1.73815746E12, 240.0], [1.73815968E12, 1442.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73815836E12, 870.95], [1.73816178E12, 2011.83], [1.738164E12, 1957.8899999999999], [1.73816058E12, 1946.4000000000003], [1.73816502E12, 2575.42], [1.7381628E12, 3112.159999999998], [1.73816604E12, 2556.75], [1.73815734E12, 601.0], [1.73815956E12, 1805.1000000000001], [1.73816382E12, 2057.5], [1.73816418E12, 2070.5499999999997], [1.73815854E12, 917.8399999999993], [1.73816076E12, 2338.42], [1.73815752E12, 688.4799999999996], [1.73816196E12, 2068.7799999999997], [1.7381664E12, 3549.75], [1.73815974E12, 1634.38], [1.73816298E12, 2229.7], [1.7381652E12, 2472.95], [1.73816622E12, 2639.43], [1.73815872E12, 733.75], [1.73816466E12, 2326.14], [1.73815902E12, 867.4999999999998], [1.73816124E12, 1946.1299999999997], [1.738158E12, 863.800000000002], [1.73816244E12, 2022.9], [1.73816022E12, 2289.41], [1.73816346E12, 2207.05], [1.73816568E12, 2384.62], [1.7381667E12, 2935.0], [1.7381592E12, 11097.0], [1.73816142E12, 2142.71], [1.7381616E12, 1754.9], [1.73816262E12, 2459.8199999999997], [1.73816484E12, 2108.07], [1.73815818E12, 962.170000000003], [1.7381604E12, 1987.54], [1.73815938E12, 1709.9999999999968], [1.73816364E12, 1825.98], [1.73816586E12, 2912.15], [1.7381637E12, 2529.07], [1.73815806E12, 810.7299999999991], [1.73816028E12, 1533.3200000000002], [1.73816592E12, 2729.85], [1.73815926E12, 3270.7999999999633], [1.73816148E12, 1780.68], [1.73816472E12, 2328.21], [1.7381625E12, 2707.45], [1.73816574E12, 2465.48], [1.73815824E12, 885.2000000000007], [1.73815722E12, 709.8399999999929], [1.73816046E12, 2001.4500000000003], [1.73815944E12, 2138.58], [1.73816166E12, 2053.08], [1.73816388E12, 1957.83], [1.7381661E12, 2537.62], [1.7381649E12, 2401.38], [1.73816268E12, 2163.5499999999997], [1.73815842E12, 708.2700000000025], [1.73816064E12, 1905.1399999999994], [1.73816094E12, 1665.71], [1.7381577E12, 698.0], [1.73815992E12, 1902.3000000000002], [1.73816214E12, 2130.0099999999998], [1.73816436E12, 2053.01], [1.73816658E12, 2958.45], [1.73816538E12, 2424.31], [1.73816316E12, 2815.19], [1.7381589E12, 812.3599999999997], [1.73816112E12, 2487.85], [1.73816352E12, 2112.2], [1.73815788E12, 816.0799999999999], [1.7381601E12, 3498.4500000000003], [1.73816454E12, 2179.14], [1.73815908E12, 988.4399999999997], [1.73816232E12, 1985.0], [1.7381613E12, 1884.23], [1.73816334E12, 2004.85], [1.73816556E12, 2475.37], [1.73816562E12, 2626.62], [1.73815998E12, 1799.06], [1.73815896E12, 1096.8400000000001], [1.7381634E12, 2082.75], [1.73816118E12, 2051.89], [1.73816442E12, 2422.85], [1.7381622E12, 2450.45], [1.73816664E12, 2937.58], [1.73815794E12, 973.1199999999972], [1.73816016E12, 1731.49], [1.73816256E12, 2252.98], [1.7381658E12, 2389.55], [1.73815914E12, 1847.74], [1.73816136E12, 1952.83], [1.73816358E12, 2059.0], [1.73815812E12, 750.95], [1.73816034E12, 1817.3899999999978], [1.73816238E12, 2053.67], [1.7381646E12, 3030.09], [1.73816304E12, 2434.14], [1.7381574E12, 600.6000000000004], [1.73816628E12, 2672.2200000000003], [1.73815962E12, 1868.52], [1.73816406E12, 1900.56], [1.7381586E12, 809.4100000000003], [1.73816184E12, 2158.56], [1.73816082E12, 1685.59], [1.73816286E12, 2482.39], [1.73816508E12, 2268.3], [1.73816322E12, 2705.52], [1.73816544E12, 2614.48], [1.73815758E12, 740.1300000000017], [1.7381598E12, 1691.6800000000003], [1.73816646E12, 2815.02], [1.73815878E12, 729.7999999999997], [1.738161E12, 2966.2799999999997], [1.73816202E12, 1900.5699999999997], [1.73816424E12, 2146.21], [1.73816526E12, 2389.86], [1.73815776E12, 919.0999999999926], [1.73816208E12, 1899.8899999999999], [1.73815866E12, 701.1999999999992], [1.73816088E12, 2447.25], [1.7381631E12, 2698.43], [1.73816532E12, 2612.57], [1.73815764E12, 725.7599999999984], [1.73815986E12, 1536.17], [1.7381619E12, 2559.5], [1.73816412E12, 1920.0099999999998], [1.73816634E12, 2619.62], [1.73815884E12, 950.060000000004], [1.73816226E12, 1846.67], [1.73816448E12, 2060.05], [1.73816106E12, 2147.5999999999995], [1.7381655E12, 2999.59], [1.73816328E12, 2260.14], [1.73816652E12, 2809.49], [1.73815782E12, 709.1000000000008], [1.73816004E12, 1675.53], [1.7381643E12, 2199.42], [1.73815932E12, 1547.4499999999994], [1.73816274E12, 2588.04], [1.73816496E12, 2429.13], [1.73816598E12, 2718.48], [1.73815728E12, 485.4599999999998], [1.73816052E12, 1800.59], [1.7381583E12, 898.0], [1.73816154E12, 1918.31], [1.73816376E12, 2135.8], [1.73816478E12, 2494.52], [1.73816514E12, 2418.5], [1.7381595E12, 2018.58], [1.73815848E12, 768.599999999994], [1.73816292E12, 2070.3999999999996], [1.7381607E12, 1876.1499999999999], [1.73816394E12, 2060.2], [1.73816172E12, 1965.32], [1.73816616E12, 2873.44], [1.73815746E12, 905.8999999999915], [1.73815968E12, 1658.3300000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73815836E12, 467.5], [1.73816178E12, 1900.6], [1.738164E12, 1890.0], [1.73816058E12, 1792.4999999999998], [1.73816502E12, 2124.95], [1.7381628E12, 2541.9], [1.73816604E12, 2349.0], [1.73815734E12, 238.04999999999995], [1.73815956E12, 1540.75], [1.73816382E12, 1929.5], [1.73816418E12, 1891.25], [1.73815854E12, 498.0], [1.73816076E12, 1824.4999999999982], [1.73815752E12, 284.39999999999986], [1.73816196E12, 1838.0], [1.7381664E12, 2704.0], [1.73815974E12, 1439.15], [1.73816298E12, 2036.1999999999998], [1.7381652E12, 2295.199999999999], [1.73816622E12, 2508.45], [1.73815872E12, 604.75], [1.73816466E12, 2049.95], [1.73815902E12, 760.25], [1.73816124E12, 1811.35], [1.738158E12, 329.0], [1.73816244E12, 1985.75], [1.73816022E12, 1446.1], [1.73816346E12, 1925.0499999999993], [1.73816568E12, 2367.65], [1.7381667E12, 2513.45], [1.7381592E12, 9854.0], [1.73816142E12, 1703.3], [1.7381616E12, 1694.5], [1.73816262E12, 2201.3], [1.73816484E12, 1996.9999999999995], [1.73815818E12, 354.14999999999986], [1.7381604E12, 1594.65], [1.73815938E12, 1420.5], [1.73816364E12, 1753.4499999999998], [1.73816586E12, 2641.75], [1.7381637E12, 2283.149999999999], [1.73815806E12, 290.8499999999999], [1.73816028E12, 1438.1499999999999], [1.73816592E12, 2559.1], [1.73815926E12, 978.25], [1.73816148E12, 1713.1999999999998], [1.73816472E12, 2017.25], [1.7381625E12, 1865.25], [1.73816574E12, 2381.65], [1.73815824E12, 345.0], [1.73815722E12, 256.5999999999999], [1.73816046E12, 1658.0], [1.73815944E12, 1538.8499999999988], [1.73816166E12, 1800.8], [1.73816388E12, 1811.0], [1.7381661E12, 2376.2], [1.7381649E12, 2215.999999999999], [1.73816268E12, 1892.75], [1.73815842E12, 452.0], [1.73816064E12, 1629.0], [1.73816094E12, 1602.9499999999998], [1.7381577E12, 260.0], [1.73815992E12, 1518.3], [1.73816214E12, 1901.0], [1.73816436E12, 1920.6499999999999], [1.73816658E12, 2567.0], [1.73816538E12, 2386.7], [1.73816316E12, 2238.0], [1.7381589E12, 716.3499999999998], [1.73816112E12, 2003.75], [1.73816352E12, 1886.5], [1.73815788E12, 292.0], [1.7381601E12, 1939.75], [1.73816454E12, 2069.0], [1.73815908E12, 899.8], [1.73816232E12, 1883.15], [1.7381613E12, 1793.0499999999997], [1.73816334E12, 1912.75], [1.73816556E12, 2386.7], [1.73816562E12, 2311.2], [1.73815998E12, 1614.6], [1.73815896E12, 792.0], [1.7381634E12, 1889.75], [1.73816118E12, 1838.05], [1.73816442E12, 2203.85], [1.7381622E12, 1900.25], [1.73816664E12, 2635.4999999999995], [1.73815794E12, 276.0], [1.73816016E12, 1591.3999999999999], [1.73816256E12, 2168.2999999999997], [1.7381658E12, 2339.1], [1.73815914E12, 1042.0], [1.73816136E12, 1804.9499999999998], [1.73816358E12, 1816.1999999999998], [1.73815812E12, 323.5], [1.73816034E12, 1587.6], [1.73816238E12, 1868.9], [1.7381646E12, 2486.149999999996], [1.73816304E12, 2031.5999999999997], [1.7381574E12, 344.5], [1.73816628E12, 2419.8], [1.73815962E12, 1620.0499999999997], [1.73816406E12, 1808.25], [1.7381586E12, 529.3], [1.73816184E12, 1855.35], [1.73816082E12, 1620.5], [1.73816286E12, 2125.3500000000004], [1.73816508E12, 2055.7000000000003], [1.73816322E12, 2341.3999999999996], [1.73816544E12, 2358.7], [1.73815758E12, 257.0], [1.7381598E12, 1439.3], [1.73816646E12, 2418.15], [1.73815878E12, 612.5999999999999], [1.738161E12, 1890.3], [1.73816202E12, 1805.0], [1.73816424E12, 2051.35], [1.73816526E12, 2296.1], [1.73815776E12, 264.25], [1.73816208E12, 1867.6], [1.73815866E12, 519.0], [1.73816088E12, 1778.0], [1.7381631E12, 2115.2], [1.73816532E12, 2491.249999999996], [1.73815764E12, 256.0], [1.73815986E12, 1419.5999999999995], [1.7381619E12, 2065.5], [1.73816412E12, 1847.6499999999999], [1.73816634E12, 2299.65], [1.73815884E12, 686.15], [1.73816226E12, 1770.9], [1.73816448E12, 1983.25], [1.73816106E12, 1906.1999999999998], [1.7381655E12, 2509.5], [1.73816328E12, 2103.4499999999994], [1.73816652E12, 2612.0499999999997], [1.73815782E12, 265.54999999999995], [1.73816004E12, 1550.6999999999996], [1.7381643E12, 2028.6], [1.73815932E12, 1367.75], [1.73816274E12, 1990.899999999998], [1.73816496E12, 2212.9], [1.73816598E12, 2462.7], [1.73815728E12, 240.0999999999999], [1.73816052E12, 1658.1999999999998], [1.7381583E12, 547.1999999999998], [1.73816154E12, 1810.7], [1.73816376E12, 1972.75], [1.73816478E12, 2183.5500000000006], [1.73816514E12, 2290.5], [1.7381595E12, 1605.35], [1.73815848E12, 447.0], [1.73816292E12, 1900.75], [1.7381607E12, 1679.3], [1.73816394E12, 1958.1499999999999], [1.73816172E12, 1805.4499999999998], [1.73816616E12, 2629.15], [1.73815746E12, 271.5], [1.73815968E12, 1542.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73815836E12, 16.0], [1.73816178E12, 16.0], [1.738164E12, 15.0], [1.73816058E12, 16.0], [1.73816502E12, 18.0], [1.7381628E12, 16.0], [1.73816604E12, 16.0], [1.73815734E12, 15.0], [1.73815956E12, 15.0], [1.73816382E12, 17.0], [1.73816418E12, 15.0], [1.73815854E12, 15.0], [1.73816076E12, 15.0], [1.73815752E12, 14.0], [1.73816196E12, 16.0], [1.7381664E12, 18.0], [1.73815974E12, 16.0], [1.73816298E12, 16.0], [1.7381652E12, 15.0], [1.73816622E12, 16.0], [1.73815872E12, 15.0], [1.73816466E12, 16.0], [1.73815902E12, 16.0], [1.73816124E12, 17.0], [1.738158E12, 15.0], [1.73816244E12, 17.0], [1.73816022E12, 16.0], [1.73816346E12, 17.0], [1.73816568E12, 16.0], [1.7381667E12, 16.0], [1.7381592E12, 16.0], [1.73816142E12, 17.0], [1.7381616E12, 15.0], [1.73816262E12, 16.0], [1.73816484E12, 16.0], [1.73815818E12, 16.0], [1.7381604E12, 16.0], [1.73815938E12, 15.0], [1.73816364E12, 16.0], [1.73816586E12, 16.0], [1.7381637E12, 14.0], [1.73815806E12, 15.0], [1.73816028E12, 16.0], [1.73816592E12, 16.0], [1.73815926E12, 17.0], [1.73816148E12, 16.0], [1.73816472E12, 15.0], [1.7381625E12, 15.0], [1.73816574E12, 16.0], [1.73815824E12, 15.0], [1.73815722E12, 16.0], [1.73816046E12, 16.0], [1.73815944E12, 17.0], [1.73816166E12, 17.0], [1.73816388E12, 16.0], [1.7381661E12, 16.0], [1.7381649E12, 17.0], [1.73816268E12, 16.0], [1.73815842E12, 14.0], [1.73816064E12, 16.0], [1.73816094E12, 18.0], [1.7381577E12, 15.0], [1.73815992E12, 15.0], [1.73816214E12, 16.0], [1.73816436E12, 17.0], [1.73816658E12, 15.0], [1.73816538E12, 16.0], [1.73816316E12, 17.0], [1.7381589E12, 16.0], [1.73816112E12, 18.0], [1.73816352E12, 16.0], [1.73815788E12, 15.0], [1.7381601E12, 16.0], [1.73816454E12, 15.0], [1.73815908E12, 16.0], [1.73816232E12, 17.0], [1.7381613E12, 16.0], [1.73816334E12, 16.0], [1.73816556E12, 18.0], [1.73816562E12, 16.0], [1.73815998E12, 17.0], [1.73815896E12, 17.0], [1.7381634E12, 17.0], [1.73816118E12, 18.0], [1.73816442E12, 16.0], [1.7381622E12, 16.0], [1.73816664E12, 15.0], [1.73815794E12, 15.0], [1.73816016E12, 17.0], [1.73816256E12, 16.0], [1.7381658E12, 18.0], [1.73815914E12, 17.0], [1.73816136E12, 17.0], [1.73816358E12, 16.0], [1.73815812E12, 15.0], [1.73816034E12, 16.0], [1.73816238E12, 16.0], [1.7381646E12, 17.0], [1.73816304E12, 17.0], [1.7381574E12, 14.0], [1.73816628E12, 16.0], [1.73815962E12, 15.0], [1.73816406E12, 18.0], [1.7381586E12, 15.0], [1.73816184E12, 15.0], [1.73816082E12, 15.0], [1.73816286E12, 16.0], [1.73816508E12, 16.0], [1.73816322E12, 18.0], [1.73816544E12, 17.0], [1.73815758E12, 16.0], [1.7381598E12, 15.0], [1.73816646E12, 18.0], [1.73815878E12, 15.0], [1.738161E12, 17.0], [1.73816202E12, 18.0], [1.73816424E12, 15.0], [1.73816526E12, 17.0], [1.73815776E12, 15.0], [1.73816208E12, 15.0], [1.73815866E12, 17.0], [1.73816088E12, 17.0], [1.7381631E12, 16.0], [1.73816532E12, 17.0], [1.73815764E12, 15.0], [1.73815986E12, 14.0], [1.7381619E12, 16.0], [1.73816412E12, 17.0], [1.73816634E12, 18.0], [1.73815884E12, 15.0], [1.73816226E12, 17.0], [1.73816448E12, 17.0], [1.73816106E12, 17.0], [1.7381655E12, 18.0], [1.73816328E12, 16.0], [1.73816652E12, 19.0], [1.73815782E12, 15.0], [1.73816004E12, 17.0], [1.7381643E12, 15.0], [1.73815932E12, 16.0], [1.73816274E12, 16.0], [1.73816496E12, 16.0], [1.73816598E12, 18.0], [1.73815728E12, 15.0], [1.73816052E12, 15.0], [1.7381583E12, 16.0], [1.73816154E12, 16.0], [1.73816376E12, 15.0], [1.73816478E12, 18.0], [1.73816514E12, 17.0], [1.7381595E12, 16.0], [1.73815848E12, 15.0], [1.73816292E12, 18.0], [1.7381607E12, 16.0], [1.73816394E12, 16.0], [1.73816172E12, 16.0], [1.73816616E12, 18.0], [1.73815746E12, 15.0], [1.73815968E12, 17.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73815836E12, 149.0], [1.73816178E12, 721.0], [1.738164E12, 783.5], [1.73816058E12, 644.0], [1.73816502E12, 866.0], [1.7381628E12, 848.0], [1.73816604E12, 937.5], [1.73815734E12, 109.5], [1.73815956E12, 616.0], [1.73816382E12, 785.0], [1.73816418E12, 779.5], [1.73815854E12, 61.0], [1.73816076E12, 656.0], [1.73815752E12, 171.0], [1.73816196E12, 762.0], [1.7381664E12, 1078.0], [1.73815974E12, 581.5], [1.73816298E12, 811.5], [1.7381652E12, 914.5], [1.73816622E12, 979.0], [1.73815872E12, 151.5], [1.73816466E12, 815.5], [1.73815902E12, 212.0], [1.73816124E12, 761.0], [1.738158E12, 117.0], [1.73816244E12, 787.0], [1.73816022E12, 602.0], [1.73816346E12, 810.5], [1.73816568E12, 922.5], [1.7381667E12, 1821.0], [1.7381592E12, 1389.0], [1.73816142E12, 700.5], [1.7381616E12, 676.5], [1.73816262E12, 773.0], [1.73816484E12, 858.0], [1.73815818E12, 124.0], [1.7381604E12, 644.0], [1.73815938E12, 359.5], [1.73816364E12, 784.0], [1.73816586E12, 1053.5], [1.7381637E12, 832.5], [1.73815806E12, 141.5], [1.73816028E12, 591.0], [1.73816592E12, 962.5], [1.73815926E12, 225.0], [1.73816148E12, 698.5], [1.73816472E12, 866.0], [1.7381625E12, 762.5], [1.73816574E12, 937.5], [1.73815824E12, 199.0], [1.73815722E12, 66.5], [1.73816046E12, 604.0], [1.73815944E12, 531.0], [1.73816166E12, 703.0], [1.73816388E12, 743.5], [1.7381661E12, 936.5], [1.7381649E12, 872.5], [1.73816268E12, 809.5], [1.73815842E12, 130.5], [1.73816064E12, 645.5], [1.73816094E12, 654.0], [1.7381577E12, 59.0], [1.73815992E12, 413.0], [1.73816214E12, 778.0], [1.73816436E12, 815.0], [1.73816658E12, 1030.5], [1.73816538E12, 939.0], [1.73816316E12, 869.0], [1.7381589E12, 186.5], [1.73816112E12, 756.0], [1.73816352E12, 796.5], [1.73815788E12, 122.0], [1.7381601E12, 733.5], [1.73816454E12, 846.5], [1.73815908E12, 463.0], [1.73816232E12, 746.5], [1.7381613E12, 736.0], [1.73816334E12, 770.0], [1.73816556E12, 974.0], [1.73816562E12, 950.5], [1.73815998E12, 672.5], [1.73815896E12, 222.5], [1.7381634E12, 777.5], [1.73816118E12, 741.5], [1.73816442E12, 858.0], [1.7381622E12, 788.5], [1.73816664E12, 2030.0], [1.73815794E12, 120.5], [1.73816016E12, 632.0], [1.73816256E12, 815.5], [1.7381658E12, 956.0], [1.73815914E12, 44.0], [1.73816136E12, 715.0], [1.73816358E12, 748.0], [1.73815812E12, 132.0], [1.73816034E12, 676.0], [1.73816238E12, 752.5], [1.7381646E12, 922.5], [1.73816304E12, 826.5], [1.7381574E12, 173.0], [1.73816628E12, 950.5], [1.73815962E12, 609.0], [1.73816406E12, 755.5], [1.7381586E12, 137.0], [1.73816184E12, 768.0], [1.73816082E12, 663.5], [1.73816286E12, 787.5], [1.73816508E12, 893.0], [1.73816322E12, 833.0], [1.73816544E12, 985.5], [1.73815758E12, 130.0], [1.7381598E12, 353.0], [1.73816646E12, 1003.0], [1.73815878E12, 109.0], [1.738161E12, 738.0], [1.73816202E12, 776.0], [1.73816424E12, 843.5], [1.73816526E12, 872.5], [1.73815776E12, 112.5], [1.73816208E12, 763.0], [1.73815866E12, 214.0], [1.73816088E12, 649.5], [1.7381631E12, 783.5], [1.73816532E12, 909.5], [1.73815764E12, 127.0], [1.73815986E12, 580.5], [1.7381619E12, 823.0], [1.73816412E12, 787.0], [1.73816634E12, 930.0], [1.73815884E12, 153.0], [1.73816226E12, 746.0], [1.73816448E12, 850.0], [1.73816106E12, 714.0], [1.7381655E12, 1046.0], [1.73816328E12, 780.0], [1.73816652E12, 1058.0], [1.73815782E12, 124.5], [1.73816004E12, 645.5], [1.7381643E12, 835.0], [1.73815932E12, 268.0], [1.73816274E12, 763.5], [1.73816496E12, 892.0], [1.73816598E12, 938.5], [1.73815728E12, 66.0], [1.73816052E12, 641.0], [1.7381583E12, 201.0], [1.73816154E12, 699.0], [1.73816376E12, 750.0], [1.73816478E12, 873.5], [1.73816514E12, 873.5], [1.7381595E12, 609.0], [1.73815848E12, 209.0], [1.73816292E12, 816.0], [1.7381607E12, 662.5], [1.73816394E12, 814.5], [1.73816172E12, 729.0], [1.73816616E12, 969.5], [1.73815746E12, 131.0], [1.73815968E12, 606.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7381667E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 1.0, "maxY": 1175.5, "series": [{"data": [[2.0, 32.0], [3.0, 46.0], [4.0, 1175.5], [5.0, 573.0], [6.0, 213.5], [7.0, 38.5], [8.0, 198.5], [9.0, 163.5], [10.0, 141.5], [11.0, 213.0], [12.0, 192.5], [13.0, 47.0], [14.0, 43.0], [15.0, 48.0], [16.0, 198.0], [1.0, 34.0], [17.0, 76.0], [18.0, 91.0], [19.0, 204.0], [20.0, 188.0], [21.0, 62.0], [22.0, 183.5], [23.0, 165.0], [24.0, 123.0], [25.0, 166.0], [26.0, 107.0], [27.0, 49.5], [28.0, 58.0], [29.0, 172.5], [30.0, 109.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 1175.5, "series": [{"data": [[2.0, 0.0], [3.0, 0.0], [4.0, 1175.5], [5.0, 573.0], [6.0, 0.0], [7.0, 0.0], [8.0, 197.5], [9.0, 0.0], [10.0, 0.0], [11.0, 213.0], [12.0, 192.5], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 198.0], [1.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 204.0], [20.0, 188.0], [21.0, 0.0], [22.0, 183.5], [23.0, 165.0], [24.0, 83.5], [25.0, 166.0], [26.0, 74.5], [27.0, 0.0], [28.0, 0.0], [29.0, 172.5], [30.0, 79.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.73815722E12, "maxY": 23.633333333333333, "series": [{"data": [[1.73815836E12, 18.4], [1.73816178E12, 3.6], [1.738164E12, 3.5], [1.73816058E12, 3.8], [1.73816502E12, 3.0], [1.7381628E12, 2.933333333333333], [1.73816604E12, 2.9], [1.73815734E12, 23.633333333333333], [1.73815956E12, 4.4], [1.73816382E12, 3.4], [1.73816418E12, 3.4], [1.73815854E12, 15.916666666666666], [1.73816076E12, 3.8], [1.73815752E12, 21.516666666666666], [1.73816196E12, 3.5], [1.7381664E12, 2.4], [1.73815974E12, 4.6], [1.73816298E12, 3.2], [1.7381652E12, 3.0], [1.73816622E12, 2.6], [1.73815872E12, 13.733333333333333], [1.73816466E12, 3.3], [1.73815902E12, 8.9], [1.73816124E12, 3.5], [1.738158E12, 20.166666666666668], [1.73816244E12, 3.4], [1.73816022E12, 4.3], [1.73816346E12, 3.3], [1.73816568E12, 2.8], [1.7381667E12, 1.1], [1.7381592E12, 0.7333333333333333], [1.73816142E12, 3.8], [1.7381616E12, 3.9], [1.73816262E12, 3.1], [1.73816484E12, 3.2], [1.73815818E12, 19.3], [1.7381604E12, 4.1], [1.73815938E12, 5.566666666666666], [1.73816364E12, 3.6], [1.73816586E12, 2.4], [1.7381637E12, 3.2], [1.73815806E12, 20.366666666666667], [1.73816028E12, 4.5], [1.73816592E12, 2.7], [1.73815926E12, 7.233333333333333], [1.73816148E12, 3.8], [1.73816472E12, 3.1], [1.7381625E12, 3.4], [1.73816574E12, 2.8], [1.73815824E12, 19.65], [1.73815722E12, 6.15], [1.73816046E12, 4.066666666666666], [1.73815944E12, 4.5], [1.73816166E12, 3.7], [1.73816388E12, 3.6], [1.7381661E12, 2.8], [1.7381649E12, 3.0], [1.73816268E12, 3.4], [1.73815842E12, 18.433333333333334], [1.73816064E12, 4.033333333333333], [1.73816094E12, 4.1], [1.7381577E12, 21.666666666666668], [1.73815992E12, 4.6], [1.73816214E12, 3.5], [1.73816436E12, 3.3], [1.73816658E12, 2.5], [1.73816538E12, 2.8], [1.73816316E12, 3.0], [1.7381589E12, 10.166666666666666], [1.73816112E12, 3.4], [1.73816352E12, 3.4], [1.73815788E12, 20.8], [1.7381601E12, 3.9], [1.73816454E12, 3.2], [1.73815908E12, 8.05], [1.73816232E12, 3.6], [1.7381613E12, 3.8], [1.73816334E12, 3.4], [1.73816556E12, 2.7], [1.73816562E12, 2.8], [1.73815998E12, 4.1], [1.73815896E12, 8.8], [1.7381634E12, 3.4], [1.73816118E12, 3.5], [1.73816442E12, 3.0], [1.7381622E12, 3.4], [1.73816664E12, 2.2666666666666666], [1.73815794E12, 20.766666666666666], [1.73816016E12, 4.0], [1.73816256E12, 3.2], [1.7381658E12, 2.8], [1.73815914E12, 6.75], [1.73816136E12, 3.6], [1.73816358E12, 3.6], [1.73815812E12, 20.066666666666666], [1.73816034E12, 4.033333333333333], [1.73816238E12, 3.5], [1.7381646E12, 3.0], [1.73816304E12, 3.2], [1.7381574E12, 21.4], [1.73816628E12, 2.7], [1.73815962E12, 4.2], [1.73816406E12, 3.5], [1.7381586E12, 15.433333333333334], [1.73816184E12, 3.5], [1.73816082E12, 4.0], [1.73816286E12, 3.1], [1.73816508E12, 3.1], [1.73816322E12, 3.0], [1.73816544E12, 2.7], [1.73815758E12, 21.666666666666668], [1.7381598E12, 4.6], [1.73816646E12, 2.6], [1.73815878E12, 12.883333333333333], [1.738161E12, 3.6], [1.73816202E12, 3.5], [1.73816424E12, 3.2], [1.73816526E12, 2.8], [1.73815776E12, 21.566666666666666], [1.73816208E12, 3.5], [1.73815866E12, 15.516666666666667], [1.73816088E12, 3.7333333333333334], [1.7381631E12, 3.1], [1.73816532E12, 3.0], [1.73815764E12, 22.283333333333335], [1.73815986E12, 4.7], [1.7381619E12, 3.4], [1.73816412E12, 3.5], [1.73816634E12, 2.8], [1.73815884E12, 11.266666666666667], [1.73816226E12, 3.5], [1.73816448E12, 3.3], [1.73816106E12, 3.6], [1.7381655E12, 2.7], [1.73816328E12, 3.3], [1.73816652E12, 2.5], [1.73815782E12, 21.8], [1.73816004E12, 4.1], [1.7381643E12, 3.2], [1.73815932E12, 6.4], [1.73816274E12, 3.3], [1.73816496E12, 3.1], [1.73816598E12, 2.7], [1.73815728E12, 23.616666666666667], [1.73816052E12, 4.1], [1.7381583E12, 17.45], [1.73816154E12, 3.7], [1.73816376E12, 3.4], [1.73816478E12, 3.1], [1.73816514E12, 2.9], [1.7381595E12, 4.2], [1.73815848E12, 17.316666666666666], [1.73816292E12, 3.4], [1.7381607E12, 3.966666666666667], [1.73816394E12, 3.3], [1.73816172E12, 3.6], [1.73816616E12, 2.6], [1.73815746E12, 21.9], [1.73815968E12, 4.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7381667E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.73815722E12, "maxY": 11.816666666666666, "series": [{"data": [[1.73815836E12, 9.2], [1.73816178E12, 1.8], [1.738164E12, 1.75], [1.73816058E12, 1.9], [1.73816502E12, 1.5], [1.7381628E12, 1.4666666666666666], [1.73816604E12, 1.45], [1.73815734E12, 11.816666666666666], [1.73815956E12, 2.2], [1.73816382E12, 1.7], [1.73816418E12, 1.7], [1.73815854E12, 7.966666666666667], [1.73816076E12, 1.9], [1.73815752E12, 10.75], [1.73816196E12, 1.75], [1.7381664E12, 1.2], [1.73815974E12, 2.3], [1.73816298E12, 1.6], [1.7381652E12, 1.5], [1.73816622E12, 1.3], [1.73815872E12, 6.866666666666666], [1.73816466E12, 1.65], [1.73815902E12, 4.45], [1.73816124E12, 1.75], [1.738158E12, 10.083333333333334], [1.73816244E12, 1.7], [1.73816022E12, 2.15], [1.73816346E12, 1.65], [1.73816568E12, 1.4], [1.7381667E12, 0.55], [1.7381592E12, 0.36666666666666664], [1.73816142E12, 1.9], [1.7381616E12, 1.95], [1.73816262E12, 1.55], [1.73816484E12, 1.6], [1.73815818E12, 9.65], [1.7381604E12, 2.05], [1.73815938E12, 2.783333333333333], [1.73816364E12, 1.8], [1.73816586E12, 1.2], [1.7381637E12, 1.6], [1.73815806E12, 10.183333333333334], [1.73816028E12, 2.25], [1.73816592E12, 1.35], [1.73815926E12, 3.6166666666666667], [1.73816148E12, 1.9], [1.73816472E12, 1.55], [1.7381625E12, 1.7], [1.73816574E12, 1.4], [1.73815824E12, 9.816666666666666], [1.73815722E12, 3.066666666666667], [1.73816046E12, 2.033333333333333], [1.73815944E12, 2.25], [1.73816166E12, 1.85], [1.73816388E12, 1.8], [1.7381661E12, 1.4], [1.7381649E12, 1.5], [1.73816268E12, 1.7], [1.73815842E12, 9.216666666666667], [1.73816064E12, 2.0166666666666666], [1.73816094E12, 2.05], [1.7381577E12, 10.833333333333334], [1.73815992E12, 2.3], [1.73816214E12, 1.75], [1.73816436E12, 1.65], [1.73816658E12, 1.25], [1.73816538E12, 1.4], [1.73816316E12, 1.5], [1.7381589E12, 5.083333333333333], [1.73816112E12, 1.7], [1.73816352E12, 1.7], [1.73815788E12, 10.4], [1.7381601E12, 1.95], [1.73816454E12, 1.6], [1.73815908E12, 4.0], [1.73816232E12, 1.8], [1.7381613E12, 1.9], [1.73816334E12, 1.7], [1.73816556E12, 1.35], [1.73816562E12, 1.4], [1.73815998E12, 2.05], [1.73815896E12, 4.4], [1.7381634E12, 1.7], [1.73816118E12, 1.75], [1.73816442E12, 1.5], [1.7381622E12, 1.7], [1.73816664E12, 1.1333333333333333], [1.73815794E12, 10.383333333333333], [1.73816016E12, 2.0], [1.73816256E12, 1.6], [1.7381658E12, 1.4], [1.73815914E12, 3.4], [1.73816136E12, 1.8], [1.73816358E12, 1.8], [1.73815812E12, 10.033333333333333], [1.73816034E12, 2.0166666666666666], [1.73816238E12, 1.75], [1.7381646E12, 1.5], [1.73816304E12, 1.6], [1.7381574E12, 10.7], [1.73816628E12, 1.35], [1.73815962E12, 2.1], [1.73816406E12, 1.75], [1.7381586E12, 7.716666666666667], [1.73816184E12, 1.75], [1.73816082E12, 2.0], [1.73816286E12, 1.55], [1.73816508E12, 1.55], [1.73816322E12, 1.5], [1.73816544E12, 1.35], [1.73815758E12, 10.833333333333334], [1.7381598E12, 2.3], [1.73816646E12, 1.3], [1.73815878E12, 6.45], [1.738161E12, 1.8], [1.73816202E12, 1.75], [1.73816424E12, 1.6], [1.73816526E12, 1.4], [1.73815776E12, 10.783333333333333], [1.73816208E12, 1.75], [1.73815866E12, 7.75], [1.73816088E12, 1.8666666666666667], [1.7381631E12, 1.55], [1.73816532E12, 1.5], [1.73815764E12, 11.15], [1.73815986E12, 2.35], [1.7381619E12, 1.7], [1.73816412E12, 1.75], [1.73816634E12, 1.4], [1.73815884E12, 5.633333333333334], [1.73816226E12, 1.75], [1.73816448E12, 1.65], [1.73816106E12, 1.8], [1.7381655E12, 1.35], [1.73816328E12, 1.65], [1.73816652E12, 1.25], [1.73815782E12, 10.9], [1.73816004E12, 2.05], [1.7381643E12, 1.6], [1.73815932E12, 3.2], [1.73816274E12, 1.65], [1.73816496E12, 1.55], [1.73816598E12, 1.35], [1.73815728E12, 11.816666666666666], [1.73816052E12, 2.05], [1.7381583E12, 8.733333333333333], [1.73816154E12, 1.85], [1.73816376E12, 1.7], [1.73816478E12, 1.55], [1.73816514E12, 1.45], [1.7381595E12, 2.1], [1.73815848E12, 8.65], [1.73816292E12, 1.7], [1.7381607E12, 1.9833333333333334], [1.73816394E12, 1.65], [1.73816172E12, 1.8], [1.73816616E12, 1.3], [1.73815746E12, 10.95], [1.73815968E12, 2.15]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.73815836E12, 9.2], [1.73816178E12, 1.8], [1.738164E12, 1.75], [1.73816058E12, 1.9], [1.73816502E12, 1.5], [1.7381628E12, 1.4666666666666666], [1.73816604E12, 1.45], [1.73815734E12, 11.816666666666666], [1.73815956E12, 2.2], [1.73816382E12, 1.7], [1.73816418E12, 1.7], [1.73815854E12, 7.95], [1.73816076E12, 1.9], [1.73815752E12, 10.766666666666667], [1.73816196E12, 1.75], [1.7381664E12, 1.2], [1.73815974E12, 2.3], [1.73816298E12, 1.6], [1.7381652E12, 1.5], [1.73816622E12, 1.3], [1.73815872E12, 6.866666666666666], [1.73816466E12, 1.65], [1.73815902E12, 4.45], [1.73816124E12, 1.75], [1.738158E12, 10.083333333333334], [1.73816244E12, 1.7], [1.73816022E12, 2.15], [1.73816346E12, 1.65], [1.73816568E12, 1.4], [1.7381667E12, 0.5833333333333334], [1.7381592E12, 0.36666666666666664], [1.73816142E12, 1.9], [1.7381616E12, 1.95], [1.73816262E12, 1.55], [1.73816484E12, 1.6], [1.73815818E12, 9.65], [1.7381604E12, 2.05], [1.73815938E12, 2.783333333333333], [1.73816364E12, 1.8], [1.73816586E12, 1.2], [1.7381637E12, 1.6], [1.73815806E12, 10.183333333333334], [1.73816028E12, 2.25], [1.73816592E12, 1.35], [1.73815926E12, 3.6166666666666667], [1.73816148E12, 1.9], [1.73816472E12, 1.55], [1.7381625E12, 1.7], [1.73816574E12, 1.4], [1.73815824E12, 9.833333333333334], [1.73815722E12, 3.033333333333333], [1.73816046E12, 2.033333333333333], [1.73815944E12, 2.25], [1.73816166E12, 1.85], [1.73816388E12, 1.8], [1.7381661E12, 1.4], [1.7381649E12, 1.5], [1.73816268E12, 1.7], [1.73815842E12, 9.216666666666667], [1.73816064E12, 2.0166666666666666], [1.73816094E12, 2.05], [1.7381577E12, 10.816666666666666], [1.73815992E12, 2.3], [1.73816214E12, 1.75], [1.73816436E12, 1.65], [1.73816658E12, 1.25], [1.73816538E12, 1.4], [1.73816316E12, 1.5], [1.7381589E12, 5.083333333333333], [1.73816112E12, 1.7], [1.73816352E12, 1.7], [1.73815788E12, 10.4], [1.7381601E12, 1.95], [1.73816454E12, 1.6], [1.73815908E12, 4.05], [1.73816232E12, 1.8], [1.7381613E12, 1.9], [1.73816334E12, 1.7], [1.73816556E12, 1.35], [1.73816562E12, 1.4], [1.73815998E12, 2.05], [1.73815896E12, 4.4], [1.7381634E12, 1.7], [1.73816118E12, 1.75], [1.73816442E12, 1.5], [1.7381622E12, 1.7], [1.73816664E12, 1.15], [1.73815794E12, 10.383333333333333], [1.73816016E12, 2.0], [1.73816256E12, 1.6], [1.7381658E12, 1.4], [1.73815914E12, 3.35], [1.73816136E12, 1.8], [1.73816358E12, 1.8], [1.73815812E12, 10.033333333333333], [1.73816034E12, 2.0166666666666666], [1.73816238E12, 1.75], [1.7381646E12, 1.5], [1.73816304E12, 1.6], [1.7381574E12, 10.7], [1.73816628E12, 1.35], [1.73815962E12, 2.1], [1.73816406E12, 1.75], [1.7381586E12, 7.716666666666667], [1.73816184E12, 1.75], [1.73816082E12, 2.0], [1.73816286E12, 1.55], [1.73816508E12, 1.55], [1.73816322E12, 1.5], [1.73816544E12, 1.35], [1.73815758E12, 10.833333333333334], [1.7381598E12, 2.3], [1.73816646E12, 1.3], [1.73815878E12, 6.433333333333334], [1.738161E12, 1.8], [1.73816202E12, 1.75], [1.73816424E12, 1.6], [1.73816526E12, 1.4], [1.73815776E12, 10.783333333333333], [1.73816208E12, 1.75], [1.73815866E12, 7.766666666666667], [1.73816088E12, 1.8666666666666667], [1.7381631E12, 1.55], [1.73816532E12, 1.5], [1.73815764E12, 11.15], [1.73815986E12, 2.35], [1.7381619E12, 1.7], [1.73816412E12, 1.75], [1.73816634E12, 1.4], [1.73815884E12, 5.633333333333334], [1.73816226E12, 1.75], [1.73816448E12, 1.65], [1.73816106E12, 1.8], [1.7381655E12, 1.35], [1.73816328E12, 1.65], [1.73816652E12, 1.25], [1.73815782E12, 10.9], [1.73816004E12, 2.05], [1.7381643E12, 1.6], [1.73815932E12, 3.2], [1.73816274E12, 1.65], [1.73816496E12, 1.55], [1.73816598E12, 1.35], [1.73815728E12, 11.8], [1.73816052E12, 2.05], [1.7381583E12, 8.716666666666667], [1.73816154E12, 1.85], [1.73816376E12, 1.7], [1.73816478E12, 1.55], [1.73816514E12, 1.45], [1.7381595E12, 2.1], [1.73815848E12, 8.666666666666666], [1.73816292E12, 1.7], [1.7381607E12, 1.9833333333333334], [1.73816394E12, 1.65], [1.73816172E12, 1.8], [1.73816616E12, 1.3], [1.73815746E12, 10.95], [1.73815968E12, 2.15]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7381667E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.73815722E12, "maxY": 11.816666666666666, "series": [{"data": [[1.73815836E12, 9.2], [1.73816178E12, 1.8], [1.738164E12, 1.75], [1.73816058E12, 1.9], [1.73816502E12, 1.5], [1.7381628E12, 1.4666666666666666], [1.73816604E12, 1.45], [1.73815734E12, 11.816666666666666], [1.73815956E12, 2.2], [1.73816382E12, 1.7], [1.73816418E12, 1.7], [1.73815854E12, 7.966666666666667], [1.73816076E12, 1.9], [1.73815752E12, 10.75], [1.73816196E12, 1.75], [1.7381664E12, 1.2], [1.73815974E12, 2.3], [1.73816298E12, 1.6], [1.7381652E12, 1.5], [1.73816622E12, 1.3], [1.73815872E12, 6.866666666666666], [1.73816466E12, 1.65], [1.73815902E12, 4.45], [1.73816124E12, 1.75], [1.738158E12, 10.083333333333334], [1.73816244E12, 1.7], [1.73816022E12, 2.15], [1.73816346E12, 1.65], [1.73816568E12, 1.4], [1.7381667E12, 0.55], [1.7381592E12, 0.36666666666666664], [1.73816142E12, 1.9], [1.7381616E12, 1.95], [1.73816262E12, 1.55], [1.73816484E12, 1.6], [1.73815818E12, 9.65], [1.7381604E12, 2.05], [1.73815938E12, 2.783333333333333], [1.73816364E12, 1.8], [1.73816586E12, 1.2], [1.7381637E12, 1.6], [1.73815806E12, 10.183333333333334], [1.73816028E12, 2.25], [1.73816592E12, 1.35], [1.73815926E12, 3.6166666666666667], [1.73816148E12, 1.9], [1.73816472E12, 1.55], [1.7381625E12, 1.7], [1.73816574E12, 1.4], [1.73815824E12, 9.816666666666666], [1.73815722E12, 3.066666666666667], [1.73816046E12, 2.033333333333333], [1.73815944E12, 2.25], [1.73816166E12, 1.85], [1.73816388E12, 1.8], [1.7381661E12, 1.4], [1.7381649E12, 1.5], [1.73816268E12, 1.7], [1.73815842E12, 9.216666666666667], [1.73816064E12, 2.0166666666666666], [1.73816094E12, 2.05], [1.7381577E12, 10.833333333333334], [1.73815992E12, 2.3], [1.73816214E12, 1.75], [1.73816436E12, 1.65], [1.73816658E12, 1.25], [1.73816538E12, 1.4], [1.73816316E12, 1.5], [1.7381589E12, 5.083333333333333], [1.73816112E12, 1.7], [1.73816352E12, 1.7], [1.73815788E12, 10.4], [1.7381601E12, 1.95], [1.73816454E12, 1.6], [1.73815908E12, 4.0], [1.73816232E12, 1.8], [1.7381613E12, 1.9], [1.73816334E12, 1.7], [1.73816556E12, 1.35], [1.73816562E12, 1.4], [1.73815998E12, 2.05], [1.73815896E12, 4.4], [1.7381634E12, 1.7], [1.73816118E12, 1.75], [1.73816442E12, 1.5], [1.7381622E12, 1.7], [1.73816664E12, 1.1333333333333333], [1.73815794E12, 10.383333333333333], [1.73816016E12, 2.0], [1.73816256E12, 1.6], [1.7381658E12, 1.4], [1.73815914E12, 3.4], [1.73816136E12, 1.8], [1.73816358E12, 1.8], [1.73815812E12, 10.033333333333333], [1.73816034E12, 2.0166666666666666], [1.73816238E12, 1.75], [1.7381646E12, 1.5], [1.73816304E12, 1.6], [1.7381574E12, 10.7], [1.73816628E12, 1.35], [1.73815962E12, 2.1], [1.73816406E12, 1.75], [1.7381586E12, 7.716666666666667], [1.73816184E12, 1.75], [1.73816082E12, 2.0], [1.73816286E12, 1.55], [1.73816508E12, 1.55], [1.73816322E12, 1.5], [1.73816544E12, 1.35], [1.73815758E12, 10.833333333333334], [1.7381598E12, 2.3], [1.73816646E12, 1.3], [1.73815878E12, 6.45], [1.738161E12, 1.8], [1.73816202E12, 1.75], [1.73816424E12, 1.6], [1.73816526E12, 1.4], [1.73815776E12, 10.783333333333333], [1.73816208E12, 1.75], [1.73815866E12, 7.75], [1.73816088E12, 1.8666666666666667], [1.7381631E12, 1.55], [1.73816532E12, 1.5], [1.73815764E12, 11.15], [1.73815986E12, 2.35], [1.7381619E12, 1.7], [1.73816412E12, 1.75], [1.73816634E12, 1.4], [1.73815884E12, 5.633333333333334], [1.73816226E12, 1.75], [1.73816448E12, 1.65], [1.73816106E12, 1.8], [1.7381655E12, 1.35], [1.73816328E12, 1.65], [1.73816652E12, 1.25], [1.73815782E12, 10.9], [1.73816004E12, 2.05], [1.7381643E12, 1.6], [1.73815932E12, 3.2], [1.73816274E12, 1.65], [1.73816496E12, 1.55], [1.73816598E12, 1.35], [1.73815728E12, 11.816666666666666], [1.73816052E12, 2.05], [1.7381583E12, 8.733333333333333], [1.73816154E12, 1.85], [1.73816376E12, 1.7], [1.73816478E12, 1.55], [1.73816514E12, 1.45], [1.7381595E12, 2.1], [1.73815848E12, 8.65], [1.73816292E12, 1.7], [1.7381607E12, 1.9833333333333334], [1.73816394E12, 1.65], [1.73816172E12, 1.8], [1.73816616E12, 1.3], [1.73815746E12, 10.95], [1.73815968E12, 2.15]], "isOverall": false, "label": "OS Process Sampler-success", "isController": false}, {"data": [[1.73815836E12, 9.2], [1.73816178E12, 1.8], [1.738164E12, 1.75], [1.73816058E12, 1.9], [1.73816502E12, 1.5], [1.7381628E12, 1.4666666666666666], [1.73816604E12, 1.45], [1.73815734E12, 11.816666666666666], [1.73815956E12, 2.2], [1.73816382E12, 1.7], [1.73816418E12, 1.7], [1.73815854E12, 7.95], [1.73816076E12, 1.9], [1.73815752E12, 10.766666666666667], [1.73816196E12, 1.75], [1.7381664E12, 1.2], [1.73815974E12, 2.3], [1.73816298E12, 1.6], [1.7381652E12, 1.5], [1.73816622E12, 1.3], [1.73815872E12, 6.866666666666666], [1.73816466E12, 1.65], [1.73815902E12, 4.45], [1.73816124E12, 1.75], [1.738158E12, 10.083333333333334], [1.73816244E12, 1.7], [1.73816022E12, 2.15], [1.73816346E12, 1.65], [1.73816568E12, 1.4], [1.7381667E12, 0.5833333333333334], [1.7381592E12, 0.36666666666666664], [1.73816142E12, 1.9], [1.7381616E12, 1.95], [1.73816262E12, 1.55], [1.73816484E12, 1.6], [1.73815818E12, 9.65], [1.7381604E12, 2.05], [1.73815938E12, 2.783333333333333], [1.73816364E12, 1.8], [1.73816586E12, 1.2], [1.7381637E12, 1.6], [1.73815806E12, 10.183333333333334], [1.73816028E12, 2.25], [1.73816592E12, 1.35], [1.73815926E12, 3.6166666666666667], [1.73816148E12, 1.9], [1.73816472E12, 1.55], [1.7381625E12, 1.7], [1.73816574E12, 1.4], [1.73815824E12, 9.833333333333334], [1.73815722E12, 3.033333333333333], [1.73816046E12, 2.033333333333333], [1.73815944E12, 2.25], [1.73816166E12, 1.85], [1.73816388E12, 1.8], [1.7381661E12, 1.4], [1.7381649E12, 1.5], [1.73816268E12, 1.7], [1.73815842E12, 9.216666666666667], [1.73816064E12, 2.0166666666666666], [1.73816094E12, 2.05], [1.7381577E12, 10.816666666666666], [1.73815992E12, 2.3], [1.73816214E12, 1.75], [1.73816436E12, 1.65], [1.73816658E12, 1.25], [1.73816538E12, 1.4], [1.73816316E12, 1.5], [1.7381589E12, 5.083333333333333], [1.73816112E12, 1.7], [1.73816352E12, 1.7], [1.73815788E12, 10.4], [1.7381601E12, 1.95], [1.73816454E12, 1.6], [1.73815908E12, 4.05], [1.73816232E12, 1.8], [1.7381613E12, 1.9], [1.73816334E12, 1.7], [1.73816556E12, 1.35], [1.73816562E12, 1.4], [1.73815998E12, 2.05], [1.73815896E12, 4.4], [1.7381634E12, 1.7], [1.73816118E12, 1.75], [1.73816442E12, 1.5], [1.7381622E12, 1.7], [1.73816664E12, 1.15], [1.73815794E12, 10.383333333333333], [1.73816016E12, 2.0], [1.73816256E12, 1.6], [1.7381658E12, 1.4], [1.73815914E12, 3.35], [1.73816136E12, 1.8], [1.73816358E12, 1.8], [1.73815812E12, 10.033333333333333], [1.73816034E12, 2.0166666666666666], [1.73816238E12, 1.75], [1.7381646E12, 1.5], [1.73816304E12, 1.6], [1.7381574E12, 10.7], [1.73816628E12, 1.35], [1.73815962E12, 2.1], [1.73816406E12, 1.75], [1.7381586E12, 7.716666666666667], [1.73816184E12, 1.75], [1.73816082E12, 2.0], [1.73816286E12, 1.55], [1.73816508E12, 1.55], [1.73816322E12, 1.5], [1.73816544E12, 1.35], [1.73815758E12, 10.833333333333334], [1.7381598E12, 2.3], [1.73816646E12, 1.3], [1.73815878E12, 6.433333333333334], [1.738161E12, 1.8], [1.73816202E12, 1.75], [1.73816424E12, 1.6], [1.73816526E12, 1.4], [1.73815776E12, 10.783333333333333], [1.73816208E12, 1.75], [1.73815866E12, 7.766666666666667], [1.73816088E12, 1.8666666666666667], [1.7381631E12, 1.55], [1.73816532E12, 1.5], [1.73815764E12, 11.15], [1.73815986E12, 2.35], [1.7381619E12, 1.7], [1.73816412E12, 1.75], [1.73816634E12, 1.4], [1.73815884E12, 5.633333333333334], [1.73816226E12, 1.75], [1.73816448E12, 1.65], [1.73816106E12, 1.8], [1.7381655E12, 1.35], [1.73816328E12, 1.65], [1.73816652E12, 1.25], [1.73815782E12, 10.9], [1.73816004E12, 2.05], [1.7381643E12, 1.6], [1.73815932E12, 3.2], [1.73816274E12, 1.65], [1.73816496E12, 1.55], [1.73816598E12, 1.35], [1.73815728E12, 11.8], [1.73816052E12, 2.05], [1.7381583E12, 8.716666666666667], [1.73816154E12, 1.85], [1.73816376E12, 1.7], [1.73816478E12, 1.55], [1.73816514E12, 1.45], [1.7381595E12, 2.1], [1.73815848E12, 8.666666666666666], [1.73816292E12, 1.7], [1.7381607E12, 1.9833333333333334], [1.73816394E12, 1.65], [1.73816172E12, 1.8], [1.73816616E12, 1.3], [1.73815746E12, 10.95], [1.73815968E12, 2.15]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7381667E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7333333333333333, "minX": 1.73815722E12, "maxY": 23.633333333333333, "series": [{"data": [[1.73815836E12, 18.4], [1.73816178E12, 3.6], [1.738164E12, 3.5], [1.73816058E12, 3.8], [1.73816502E12, 3.0], [1.7381628E12, 2.933333333333333], [1.73816604E12, 2.9], [1.73815734E12, 23.633333333333333], [1.73815956E12, 4.4], [1.73816382E12, 3.4], [1.73816418E12, 3.4], [1.73815854E12, 15.916666666666666], [1.73816076E12, 3.8], [1.73815752E12, 21.516666666666666], [1.73816196E12, 3.5], [1.7381664E12, 2.4], [1.73815974E12, 4.6], [1.73816298E12, 3.2], [1.7381652E12, 3.0], [1.73816622E12, 2.6], [1.73815872E12, 13.733333333333333], [1.73816466E12, 3.3], [1.73815902E12, 8.9], [1.73816124E12, 3.5], [1.738158E12, 20.166666666666668], [1.73816244E12, 3.4], [1.73816022E12, 4.3], [1.73816346E12, 3.3], [1.73816568E12, 2.8], [1.7381667E12, 1.1333333333333333], [1.7381592E12, 0.7333333333333333], [1.73816142E12, 3.8], [1.7381616E12, 3.9], [1.73816262E12, 3.1], [1.73816484E12, 3.2], [1.73815818E12, 19.3], [1.7381604E12, 4.1], [1.73815938E12, 5.566666666666666], [1.73816364E12, 3.6], [1.73816586E12, 2.4], [1.7381637E12, 3.2], [1.73815806E12, 20.366666666666667], [1.73816028E12, 4.5], [1.73816592E12, 2.7], [1.73815926E12, 7.233333333333333], [1.73816148E12, 3.8], [1.73816472E12, 3.1], [1.7381625E12, 3.4], [1.73816574E12, 2.8], [1.73815824E12, 19.65], [1.73815722E12, 6.1], [1.73816046E12, 4.066666666666666], [1.73815944E12, 4.5], [1.73816166E12, 3.7], [1.73816388E12, 3.6], [1.7381661E12, 2.8], [1.7381649E12, 3.0], [1.73816268E12, 3.4], [1.73815842E12, 18.433333333333334], [1.73816064E12, 4.033333333333333], [1.73816094E12, 4.1], [1.7381577E12, 21.65], [1.73815992E12, 4.6], [1.73816214E12, 3.5], [1.73816436E12, 3.3], [1.73816658E12, 2.5], [1.73816538E12, 2.8], [1.73816316E12, 3.0], [1.7381589E12, 10.166666666666666], [1.73816112E12, 3.4], [1.73816352E12, 3.4], [1.73815788E12, 20.8], [1.7381601E12, 3.9], [1.73816454E12, 3.2], [1.73815908E12, 8.05], [1.73816232E12, 3.6], [1.7381613E12, 3.8], [1.73816334E12, 3.4], [1.73816556E12, 2.7], [1.73816562E12, 2.8], [1.73815998E12, 4.1], [1.73815896E12, 8.8], [1.7381634E12, 3.4], [1.73816118E12, 3.5], [1.73816442E12, 3.0], [1.7381622E12, 3.4], [1.73816664E12, 2.283333333333333], [1.73815794E12, 20.766666666666666], [1.73816016E12, 4.0], [1.73816256E12, 3.2], [1.7381658E12, 2.8], [1.73815914E12, 6.75], [1.73816136E12, 3.6], [1.73816358E12, 3.6], [1.73815812E12, 20.066666666666666], [1.73816034E12, 4.033333333333333], [1.73816238E12, 3.5], [1.7381646E12, 3.0], [1.73816304E12, 3.2], [1.7381574E12, 21.4], [1.73816628E12, 2.7], [1.73815962E12, 4.2], [1.73816406E12, 3.5], [1.7381586E12, 15.433333333333334], [1.73816184E12, 3.5], [1.73816082E12, 4.0], [1.73816286E12, 3.1], [1.73816508E12, 3.1], [1.73816322E12, 3.0], [1.73816544E12, 2.7], [1.73815758E12, 21.666666666666668], [1.7381598E12, 4.6], [1.73816646E12, 2.6], [1.73815878E12, 12.883333333333333], [1.738161E12, 3.6], [1.73816202E12, 3.5], [1.73816424E12, 3.2], [1.73816526E12, 2.8], [1.73815776E12, 21.566666666666666], [1.73816208E12, 3.5], [1.73815866E12, 15.516666666666667], [1.73816088E12, 3.7333333333333334], [1.7381631E12, 3.1], [1.73816532E12, 3.0], [1.73815764E12, 22.3], [1.73815986E12, 4.7], [1.7381619E12, 3.4], [1.73816412E12, 3.5], [1.73816634E12, 2.8], [1.73815884E12, 11.266666666666667], [1.73816226E12, 3.5], [1.73816448E12, 3.3], [1.73816106E12, 3.6], [1.7381655E12, 2.7], [1.73816328E12, 3.3], [1.73816652E12, 2.5], [1.73815782E12, 21.8], [1.73816004E12, 4.1], [1.7381643E12, 3.2], [1.73815932E12, 6.4], [1.73816274E12, 3.3], [1.73816496E12, 3.1], [1.73816598E12, 2.7], [1.73815728E12, 23.616666666666667], [1.73816052E12, 4.1], [1.7381583E12, 17.45], [1.73816154E12, 3.7], [1.73816376E12, 3.4], [1.73816478E12, 3.1], [1.73816514E12, 2.9], [1.7381595E12, 4.2], [1.73815848E12, 17.316666666666666], [1.73816292E12, 3.4], [1.7381607E12, 3.966666666666667], [1.73816394E12, 3.3], [1.73816172E12, 3.6], [1.73816616E12, 2.6], [1.73815746E12, 21.9], [1.73815968E12, 4.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7381667E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

